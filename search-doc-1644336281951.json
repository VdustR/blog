[{"title":"Migrate to Docusaurus v2","type":0,"sectionRef":"#","url":"2021/04/01/move-to-docusaurus","content":"I migrated my site to Docusaurus v2. 剛好今天愚人節。之後會開始在這邊寫開發紀錄吧！","keywords":""},{"title":"Podman in WSL2","type":0,"sectionRef":"#","url":"2021/09/20/podman-in-wsl2","content":"","keywords":""},{"title":"Install WSL2​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#install-wsl2","content":"👉 Windows Subsystem for Linux Installation Guide for Windows 10 "},{"title":"Install Ubuntu (Optional)​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#install-ubuntu-optional","content":"👉 Get Ubuntu - Microsoft Store "},{"title":"Install podman​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#install-podman","content":"👉 How to run Podman on Windows with WSL2 "},{"title":"Install podman-compose​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#install-podman-compose","content":"Install python3 and pip: sudo apt-get -y install python3 python3-venv python3-pip pip3 install podman-compose 複製 Notice that you have to add ~/.local/bin to PATH "},{"title":"Integrate podman-compose and fish​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#integrate-podman-compose-and-fish","content":"Install the latest fish shell for fish_add_path if your fish is &lt; 3.3.0: # Check version $ fish -v fish, version 3.3.1 $ sudo apt-add-repository ppa:fish-shell/release-3 $ sudo apt-get update $ sudo apt-get install fish 複製 Check the official document if you use another distribution. Add into ~/.config/fish/config.fish: fish_add_path ~/.local/bin 複製 "},{"title":"Reference​","type":1,"pageTitle":"Podman in WSL2","url":"2021/09/20/podman-in-wsl2#reference","content":"Windows Subsystem for Linux Installation Guide for Windows 10How to run Podman on Windows with WSL2 "},{"title":"Example for Svelte + TS + Vite + MDsveX","type":0,"sectionRef":"#","url":"2021/12/25/example-vite-svelte-markdown","content":"想在 svelte 使用 markdown, 看到已經有大大開發了個套件叫 MDsveX, 然而在使用的時候仍然踩到了一些問題, 寫個簡單的範例紀錄一下, 大部分的問題和解決方法都在 vite.config.js 的註解裡: 👉 https://github.com/VdustR/example-vite-svelte-markdown","keywords":""},{"title":"A TypeScript Fullstack GraphQL CodeGen Example","type":0,"sectionRef":"#","url":"2022/01/04/example-graphql-fullstack-codegen","content":"最近試了一下 GraphQL CodeGen 產生 react-query 和 resolver type, node server 可以保證回應的型態正確, react-query functions 更可以直接使用, 真ㄉ 4 超方便的 R~ 可以參考這個簡單的範例: https://github.com/VdustR/example-graphql-fullstack-codegen","keywords":""},{"title":"Pocket","type":0,"sectionRef":"#","url":"2022/01/08/pocket","content":"最近開始嘗試用 Svelte 寫一些東西, 做了這個頁面, 主要是放一些 🔖 書籤和 自己 ⭐ 的 Repositories ， 方便搜尋用。 書籤的部分會陸續整理補上。 👉 https://vdustr.github.io/pocket","keywords":""},{"title":"新 logo","type":0,"sectionRef":"#","url":"2022/01/13/new-logo","content":"","keywords":""},{"title":"Tech​","type":1,"pageTitle":"新 logo","url":"2022/01/13/new-logo#tech","content":"Editors: LibreSpriteGravit Palette: db32Font: ark-pixel-12px-latinConverters: ConvertICO.comtext-to-svgpixel-perfect-svg 另外 Docusaurus Palette 使用 Swatcher: h dif: -7s dif: -10b dif: 6 "},{"title":"Source​","type":1,"pageTitle":"新 logo","url":"2022/01/13/new-logo#source","content":"https://github.com/VdustR/brand/tree/main/2022-01 "},{"title":"License​","type":1,"pageTitle":"新 logo","url":"2022/01/13/new-logo#license","content":"CC0 "},{"title":"Better Discord","type":0,"sectionRef":"#","url":"2021/12/21/better-discord","content":"","keywords":""},{"title":"安裝​","type":1,"pageTitle":"Better Discord","url":"2021/12/21/better-discord#安裝","content":"首先先到 Better Discord 官網 下載並安裝， "},{"title":"安裝 PluginRepo​","type":1,"pageTitle":"Better Discord","url":"2021/12/21/better-discord#安裝-pluginrepo","content":"安裝完成後 Discord 不需要重啟， 點擊 後理論上會出現一個 Better Discord 的區塊：  接著進入 Plugins 頁面並點擊 Open Plugins Folder ，到 這裡 下載 PluginRepo 的 .js 檔後放進剛剛的目錄 ( ThemeRepo 也可以順便 )， 然後回到 Plugins 頁面將 PluginRepo 啟用：  接著會看到設定頁面左側選單多了 PluginRepo 的項目：  進入之後就可以選擇自己喜歡的 plugins 安裝啦～ ( Theme 同理但是是使用 ThemeRepo)。 依照 Downloads 或 Stars 排序前幾個都滿好用的， 當然也有可能也有遺珠等待大家去發掘了！ "},{"title":"Custom CSS​","type":1,"pageTitle":"Better Discord","url":"2021/12/21/better-discord#custom-css","content":"另外除了套用 Theme 也可以在 Custom CSS 的地方調整介面， 例如可以像這樣調整字型： :root { --font-primary: 'Victor Mono', 'jf-openhuninn-1.1', Whitney, 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-display: 'Victor Mono', 'jf-openhuninn-1.1', Ginto, 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-code: 'Victor Mono', 'jf-openhuninn-1.1', Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace; --font-headline: 'Victor Mono', 'jf-openhuninn-1.1', Ginto Nord, Ginto, 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-korean: 'Victor Mono', 'jf-openhuninn-1.1', Whitney, 'Apple SD Gothic Neo', 'NanumBarunGothic', '맑은 고딕', 'Malgun Gothic', Gulim, 굴림, Dotum, 돋움, 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-japanese: 'Victor Mono', 'jf-openhuninn-1.1', Whitney, Hiragino Sans, 'ヒラギノ角ゴ ProN W3', 'Hiragino Kaku Gothic ProN', 'メイリオ', Meiryo, Osaka, 'MS PGothic', 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-chinese-simplified: 'Victor Mono', 'jf-openhuninn-1.1', Whitney, 'Microsoft YaHei New', 微软雅黑, 'Microsoft Yahei', 'Microsoft JhengHei', 宋体, SimSun, 'Helvetica Neue', Helvetica, Arial, sans-serif; --font-chinese-traditional: 'Victor Mono', 'jf-openhuninn-1.1', Whitney, 'Microsoft JhengHei', 微軟正黑體, 'Microsoft JhengHei UI', 'Microsoft YaHei', 微軟雅黑, 宋体, SimSun, 'Helvetica Neue', Helvetica, Arial, sans-serif; } 複製 擅長前端的朋友們也可以自己在 Discord 按 Ctrl + Shift + I ( Mac OS 則是 Command⌘ + Option + I ) 來看 style。 最後結果就能變像這樣子啦~  Theme - DarkMatterFonts Victor Monoopen 粉圓 我自己有遇到 Enable Transparency 開啟時 PowerToys 的 FancyZones 無法正確定位的小問題， 關掉就沒事了。 另外 Better Discord 也有他們自己的 Discord Server 。 "},{"title":"HTML To Svelte","type":0,"sectionRef":"#","url":"2022/01/27/html-to-svelte","content":"在先前寫的 Example for Svelte + TS + Vite + MDsveX 時，存在使用 shiki 將 code 轉為 html ， 再將 html 作為 svelte component 使用 的需求…… 由於 shiki 產出的結果就是一堆 &lt;span /&gt; 自然我不太需要擔心 html attributes ，當時的想法是只要將 html tags 的 innerText 都強制轉成 svelte 的字串就好了，於是使用了這樣的方法，讓他使用 svelte element ： /** * Prevent removing leading and tailing spaces. * Transform `&lt;div&gt; foo &lt;/div&gt;` into `&lt;div&gt;{' foo '}&lt;/div&gt;` * @param {string} html */ function saveSvelteHtmlText(html) { return html.replace(/&gt;( *[^&lt;\\n\\r]+ *)&lt;/g, (match) =&gt; { const text = match.substring(1, match.length - 1); /** * We don't need escape text here but we have to transform it into a svelte * string. * * For example: * &lt;div&gt; &amp;lt;div&amp;gt; &lt;/div&gt; * should be transformed to * &lt;div&gt;{&quot; &lt;div&gt; &quot;}&lt;/div&gt; */ const unescapeText = unescape(text); return '&gt;{&quot;' + unescapeText.replace(/&quot;/g, '\\\\&quot;') + '&quot;}&lt;'; }); } 複製 本來還覺得因為是直接使用正規而不是使用 parser 一直感到很不安，還寫了一堆註解說明，後來想想既然都是 html 了為什麼不直接用 svelte 原生的 {@html ...} 就好了？ /** * @param {string} html */ function htmlToSvelte(html) { return `{@html \\`${html.replace(/([`$])/g, &quot;\\\\$1&quot;)}\\`}`; } 複製 同理 React 也可以使用 dangerouslySetInnerHTML ， Vue 則使用 v-html。 原來的 repo 也修正了， commit 請看這裡。 真的是有夠 87 🤪","keywords":""},{"title":"Forked rollup-plugin-rename-extensions","type":0,"sectionRef":"#","url":"2022/02/08/forked-rollup-plugin-rename-extensions","content":"在打包 library 時我並不喜歡使用像 tsdx 等 bundle 的方式，而是比較喜歡 preserveModules 保留原始結構，使用上能有更大的彈性。 目前為止 rollup-plugin-typescript2 是我認為打包效果較好的工具，可以保留原始結構，也能生成結構一致的 .d.ts，並且對 tslib 進行 tree shaking 並放到 _virtual/_tslib.js。 基於某些工具對 esm 支援仍不是很完美，我想同時打包 .js (esm) 和 .cjs 時，找到了個不錯的 @betit/rollup-plugin-rename-extensions 可以在 rollup build 時同時對副檔名進行調整，遺憾的是其依賴的 @rollup/pluginutils createFilter 並不支援 \\0tslib.js 這種 facadeModuleId ，或是說根本是直接將之排除在外了，因此我 fork 了 @vdustr/rollup-plugin-rename-extensions 並加了一個 match option 來直接比對原始的 facadeModuleId 。 實際使用狀況的話可以參考這裡。 最後，我認為這只是暫時性的解法，目前只是先讓他能達到預期的效果而已，應該有更好更簡單的做法，歡迎大家來 Discord 群 一起交流。","keywords":""}]