<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://vdustr.dev/blog/</id>
    <title>ViPro's Blog Blog</title>
    <updated>2022-03-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://vdustr.dev/blog/"/>
    <subtitle>ViPro's Blog Blog</subtitle>
    <icon>https://vdustr.dev/blog/https://vdustr.dev/brand/2022-01/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Responsive Honeycomb Grid 🍯]]></title>
        <id>/2022/03/19/responseive-honeycomb-grid</id>
        <link href="https://vdustr.dev/blog/2022/03/19/responseive-honeycomb-grid"/>
        <updated>2022-03-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Pure CSS responsive circle grid layout.]]></summary>
        <content type="html"><![CDATA[<p>Pure CSS responsive honeycomb grid layout.</p><p><img src="https://vdustr.dev/asset-2022/03-19-responseive-honeycomb-grid/og.png" alt="Responsive Circle 🍯"></p><iframe src="https://codesandbox.io/embed/responsive-honeycomb-grid-1dg35m?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Circle 🍯" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>同樣使用 <a href="/blog/2022/03/15/responsive-diamond-grid/">Responsive Diamond Grid</a> fork 出來調整。圖片的部分可以移除，也可以自訂背景或不使用背景。</p><p>六角形的定位其實反而比較好算，然後圖片其實是錯的只需要使用 4 個一組。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="css" term="css"/>
        <category label="rwd" term="rwd"/>
        <category label="grid" term="grid"/>
        <category label="layout" term="layout"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Responsive Circle Grid 🔵]]></title>
        <id>/2022/03/16/responseive-circle-grid</id>
        <link href="https://vdustr.dev/blog/2022/03/16/responseive-circle-grid"/>
        <updated>2022-03-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Pure CSS responsive circle grid layout.]]></summary>
        <content type="html"><![CDATA[<p>Pure CSS responsive circle grid layout.</p><p><img src="https://vdustr.dev/asset-2022/03-16-responsive-circle-grid/og.png" alt="Responsive Circle 🔵"></p><iframe src="https://codesandbox.io/embed/responsive-circle-grid-jsner3?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Circle Grid 🔵" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>直接拿 <a href="/blog/2022/03/15/responsive-diamond-grid/">Responsive Diamond Grid</a> 稍微調整一下即完成。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="css" term="css"/>
        <category label="rwd" term="rwd"/>
        <category label="grid" term="grid"/>
        <category label="layout" term="layout"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Responsive Diamond Grid 💎]]></title>
        <id>/2022/03/15/responsive-diamond-grid</id>
        <link href="https://vdustr.dev/blog/2022/03/15/responsive-diamond-grid"/>
        <updated>2022-03-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Pure CSS responsive diamond grid layout.]]></summary>
        <content type="html"><![CDATA[<p>Pure CSS responsive diamond grid layout.</p><p><img src="https://vdustr.dev/asset-2022/03-15-responsive-diamond-grid/og.png" alt="Responsive Diamond Grid 💎"></p><iframe src="https://codesandbox.io/embed/responsive-diamond-grid-q72d4u?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Diamond Grid 💎" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>一堆數學。</p><p>原本用 2 個 item 1 組，發現如果最後一行為奇數個時排版就會有問題，所以改成 4 個 1 組，用 2:1 的矩形佔位，這樣最後 1 組就能夠正常排列。</p><p>💡 Issues:</p><ul><li><del>container 窄於 1 組的寬度時 n + 2, n + 3, n 會溢位跑版。</del> 睡一覺就用 <code>min-width: var(--placeholderX);</code> 修好了。</li></ul>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="css" term="css"/>
        <category label="rwd" term="rwd"/>
        <category label="grid" term="grid"/>
        <category label="layout" term="layout"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[addEventListener() useCapture]]></title>
        <id>/2022/03/14/add-event-listener-use-capture</id>
        <link href="https://vdustr.dev/blog/2022/03/14/add-event-listener-use-capture"/>
        <updated>2022-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[稍微記錄一下 addEventListener useCapture 的效果。]]></summary>
        <content type="html"><![CDATA[<p>稍微記錄一下 <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture" target="_blank" rel="noopener noreferrer"><code>addEventListener()</code> <code>useCapture</code></a> 的效果。</p><p><img src="https://vdustr.dev/asset-2022/03-14-add-event-listener-use-capture/og.png" alt="addEventListener() useCapture"></p><iframe src="https://codesandbox.io/embed/usecapture-8tdyr9?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="useCapture" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p><code>useCapture</code> 為 <code>true</code> 的事件會先觸發，父層的 listener 較子層先觸發；結束了之後才會開始觸發 <code>useCapture</code> 為 <code>false</code> 的事件，子層的 listener 較父層先觸發。以上整串事件冒泡都可以透過 <code>event.stopPropagation()</code> 停止。</p><p>Reference: <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture</a></p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="event" term="event"/>
        <category label="addEventListener" term="addEventListener"/>
        <category label="useCapture" term="useCapture"/>
        <category label="propagation" term="propagation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[EOLs in Textarea]]></title>
        <id>/2022/03/13/eols-in-textarea</id>
        <link href="https://vdustr.dev/blog/2022/03/13/eols-in-textarea"/>
        <updated>2022-03-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[EOL (end of line) 在 textarea 中會被修改。]]></summary>
        <content type="html"><![CDATA[<p>EOL (end of line) 在 textarea 中會被修改。</p><p><img src="https://vdustr.dev/asset-2022/03-13-eols-in-textarea/og.png" alt="EOLs in Textarea"></p><p>在 Textarea 中的 EOLs 都會被 format 為 <code>\n</code> (LF) ，而在 submit 後的 request 中為 <code>\r\n</code> (CRLF) 。</p><p>Demo:</p><iframe src="https://codesandbox.io/embed/eols-in-textarea-lzq9yo?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="EOLs in Textarea" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>此外 <code>\t</code> 及 <code>\u00A0</code>(nbsp) 並不會受到影響。</p><p>textarea 總是將 eol 換為 <code>\n</code> (LF) ：</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> textarea </span><span class="token operator">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(189, 147, 249);font-style:italic">document</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">createElement</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  textarea</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">value</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">textarea</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">value</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\n\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>FormData 本身不會改變值：</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> formData </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name maybe-class-name">FormData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>但使用 ajax 請求後還是會被 format 成 <code>\r\n</code> (CRLF) ：</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> xhttp </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name maybe-class-name">XMLHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method-variable function-variable method function property-access" style="color:rgb(80, 250, 123)">onreadystatechange</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">response</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// "textarea": "\r\n\r\n\r\n"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">open</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"POST"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"https://httpbin.org/post"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> formData </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name maybe-class-name">FormData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">send</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>Reference: <a href="https://html.spec.whatwg.org/multipage/form-elements.html#the-textarea-element" target="_blank" rel="noopener noreferrer">https://html.spec.whatwg.org/multipage/form-elements.html#the-textarea-element</a></p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="eol" term="eol"/>
        <category label="textarea" term="textarea"/>
        <category label="form" term="form"/>
        <category label="formdata" term="formdata"/>
        <category label="ajax" term="ajax"/>
        <category label="request" term="request"/>
        <category label="get" term="get"/>
        <category label="post" term="post"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Svelte 3 個人初體驗心得]]></title>
        <id>/2022/02/25/svelte-first-impression</id>
        <link href="https://vdustr.dev/blog/2022/02/25/svelte-first-impression"/>
        <updated>2022-02-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[雖然有點晚了，但最近才比較有空稍微試玩了一下，寫了兩個小 repo ，有些小小心得在這裡紀錄一下。]]></summary>
        <content type="html"><![CDATA[<p>雖然有點晚了，但最近才比較有空稍微試玩了一下，寫了兩個小 repo ，有些小小心得紀錄在這裡。</p><p><img src="https://vdustr.dev/asset-2022/02-25-svelte-first-impression/og.png" alt="Svelte First Impression"></p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="優點">優點<a class="hash-link" href="#優點" title="標題的直接連結">​</a></h2><p>為什麼會想嘗試 Svelte 3?</p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="好懂好上手">好懂好上手<a class="hash-link" href="#好懂好上手" title="標題的直接連結">​</a></h3><p>基本上 <a href="https://svelte.dev/tutorial" target="_blank" rel="noopener noreferrer">官方教學</a> 跑過一次就差不多了，互動式寫得令人非常容易理解運作方式。</p><p>另外作者 <a href="https://twitter.com/Rich_Harris" target="_blank" rel="noopener noreferrer">Rich Harris</a> 的 <a href="https://youtu.be/AdNJ3fydeao" target="_blank" rel="noopener noreferrer">Rethinking reactivity</a> 分享設計理念的影片也非常值得一看。當中我很喜歡這句話：</p><p><img src="https://vdustr.dev/asset-2022/02-25-svelte-first-impression/framework.png" alt="Frameworks are not tools for organising your code, They are tools for organising your mind."></p><p>我個人認為 React hooks, Vue composition API, Svelte 3 在寫法上有一定的相似之處，我不清楚這種開發方式是否有什麼具體的專有名詞。</p><p>我自己在寫 React 的時候有一些特別在意的事:</p><ul><li>Render 的時候會一直重複做多餘的事情，這點在 <a href="https://twitter.com/Rich_Harris" target="_blank" rel="noopener noreferrer">Rich Harris</a> 的 <a href="https://youtu.be/AdNJ3fydeao" target="_blank" rel="noopener noreferrer">Rethinking reactivity</a> 裡也有提到。這個問題 React 未來有機會透過 transformer 被解決 (<a href="https://youtu.be/lGEMwh32soc" target="_blank" rel="noopener noreferrer">黃玄 - React without memo</a>) 。</li><li>依賴 <a href="https://github.com/facebook/react/tree/0dedfcc/packages/eslint-plugin-react-hooks" target="_blank" rel="noopener noreferrer">eslint-plugin-react-hooks</a> ，寫起來相對囉嗦。像是 <code>useEffect</code> 如果是要監聽特定幾個值是否改變，使用 usePrevious compare 效能就差，寫起來也醜；使用 <code>eslint-disable-next-line</code> 維護上就會比較麻煩，可能需求上有調整就會漏東漏西而產生 side effect ，而我也很討厭 disable eslint rules。</li></ul><p>如果要我推坑的話我會如何簡介 Svelte 3?</p><ul><li><p>直接改值就是改 state，使用起來非常直覺，本身像是在寫 js 但也完全不是在寫 js 。可以說 svelte 本身就是一種獨樹一格卻又像 js 的語言，透過 Svelte 這個 compiler 編譯成真正的 js 給瀏覽器執行。<a href="https://svelte.dev/blog/virtual-dom-is-pure-overhead#where-does-the-overhead-come-from" target="_blank" rel="noopener noreferrer">官方自已也是說 svelte 是 compiler</a>：</p><blockquote><p>This is almost exactly the update code that Svelte generates. Unlike traditional UI frameworks, Svelte is a compiler that knows at build time how things could change in your app, rather than waiting to do the work at run time.</p></blockquote></li><li><p><code>$:</code> 大概就像無腦版的 useMemo / computed + useEffect / watch</p></li><li><p>寫起來很爽</p></li><li><p>寫起來很爽</p></li><li><p>寫起來很爽</p></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="內建-store">內建 store<a class="hash-link" href="#內建-store" title="標題的直接連結">​</a></h3><ul><li><a href="https://svelte.dev/docs#run-time-svelte-store" target="_blank" rel="noopener noreferrer"><code>svelte/store</code></a> 簡單好用。在 <code>.svelte</code> 裡也可以直接透過 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$</code> prefix</a> 的方式取值，非常直覺。</li><li><code>derived()</code> 其實就像 <code>$:</code>。</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="內建-spring-animate--transition">內建 Spring Animate / Transition<a class="hash-link" href="#內建-spring-animate--transition" title="標題的直接連結">​</a></h3><p>內建 <a href="https://aerotwist.com/blog/flip-your-animations/" target="_blank" rel="noopener noreferrer">FLIP</a> move <a href="https://svelte.dev/docs#run-time-svelte-animate" target="_blank" rel="noopener noreferrer">animate</a> 和 <a href="https://svelte.dev/docs#run-time-svelte-transition" target="_blank" rel="noopener noreferrer">transition</a>。</p><p>使用的時候要注意目前 list item 有些小問題，詳細情況和 demo 可以參考我寫的 <a href="/blog/2022/02/22/likftc/">likftc</a> ，不確定官方未來會不會做其他修正。</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="start-kit">Start kit<a class="hash-link" href="#start-kit" title="標題的直接連結">​</a></h2><ul><li>SPA: <a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">Vite</a></li><li>SSR / SSG: <a href="https://github.com/sveltejs/kit" target="_blank" rel="noopener noreferrer">SvelteKit</a></li><li>Markdown: <a href="https://github.com/pngwn/MDsveX" target="_blank" rel="noopener noreferrer">MDsveX</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="issues">Issues<a class="hash-link" href="#issues" title="標題的直接連結">​</a></h2><p>說了這麼多優點，其實也是有遇到一些問題的。期待未來都可以解決，畢竟 Svelte 開發體驗非常優越！</p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="svelte-kit-未內建-sitemap">Svelte Kit 未內建 sitemap<a class="hash-link" href="#svelte-kit-未內建-sitemap" title="標題的直接連結">​</a></h3><p>可以用: <a href="https://github.com/bartholomej/svelte-sitemap" target="_blank" rel="noopener noreferrer">bartholomej/svelte-sitemap</a></p><p>使用方式很簡單在使用 Svelte Kit 的 repository 的跟目錄下直接下指令就可以了:</p><div class="codeBlockContainer_JM4U language-bash theme-code-block"><div class="codeBlockContent_MyK3 bash"><pre tabindex="0" class="prism-code language-bash codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx svelte-sitemap --domain https://example.com</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="generating-dts">Generating <code>.d.ts</code><a class="hash-link" href="#generating-dts" title="標題的直接連結">​</a></h3><p>要包 library 時會用到。 Svelte compiler 本身無法 generate <code>.d.ts</code> 。</p><p>官方的 language-tools 其實有內建 <a href="https://github.com/sveltejs/language-tools/blob/6ef2442/packages/svelte2tsx/src/emitDts.ts" target="_blank" rel="noopener noreferrer">emitDts</a> 但還沒有寫成文件。使用方式也很簡單：</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> emitDts </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"svelte2tsx"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">require</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">createRequire</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">emitDts</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  declarationDir</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/your/dist"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  svelteShimsPath</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">require</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">resolve</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"svelte2tsx/svelte-shims.d.ts"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  libRoot</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/your/src"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>目前無法直接整合 rollup，必須另外寫個 node script 執行。</p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="尚不支援-generic-parameter-defaults">尚不支援 Generic Parameter Defaults<a class="hash-link" href="#尚不支援-generic-parameter-defaults" title="標題的直接連結">​</a></h3><p>目前 <a href="https://github.com/sveltejs/rfcs/pull/38" target="_blank" rel="noopener noreferrer">Generics 仍在 RFC</a> 。</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> $$Generic</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// extends boolean</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>效果類似:</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:rgb(80, 250, 123)">MyFunctionComponent</span><span class="token generic-function generic class-name operator">&lt;</span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token generic-function generic class-name operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name">MyClassComponent</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>尚不支援 <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-3.html#generic-parameter-defaults" target="_blank" rel="noopener noreferrer">generic parameter defaults</a> , 我也把這個問題反應給該 PR 的作者了(<a href="https://github.com/sveltejs/rfcs/pull/38#issuecomment-1039834806" target="_blank" rel="noopener noreferrer">TypeScript: Explicitly Typing Props/Slots/Events + Generics #38</a>)。</p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="component-可能不容易包得很彈性">Component 可能不容易包得很彈性<a class="hash-link" href="#component-可能不容易包得很彈性" title="標題的直接連結">​</a></h3><p>Element Directives 無法輕易直接轉移到 Component (會直接被 svelte 擋下來)。如果要讓 component 彈性很大的話不能像 react 那麼好處理。</p><p><code>$$restProps</code> / <code>$$props</code> 也不能像 react 可以那麼容易透過取得 <code>ComponentProps&lt;&gt;</code> 來繼承 children 的 prop types 。</p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="custom-hooks">Custom hooks<a class="hash-link" href="#custom-hooks" title="標題的直接連結">​</a></h3><p>因為 Svelte compiler 並不支援 <code>.js</code> / <code>.ts</code>，所以 Svelte 的功能 (主要是 <a href="https://svelte.dev/docs#component-format-script-3-$-marks-a-statement-as-reactive" target="_blank" rel="noopener noreferrer"><code>$:</code></a> 和 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$ prefix</code></a>) 並無法像 react 或 vue 那樣輕易無痛地將部分功能區塊輕易地抽出做成 custom hooks 。目前看到比較建議的做法 (<a href="https://gradientdescent.de/custom-hooks/#Mypreferredsolution" target="_blank" rel="noopener noreferrer">How to Implement Custom React Hooks in Svelte</a>) 而我也認同的是使用 <code>let:</code> directive，如此一來就可以避免 <code>.js</code> 或 <code>.ts</code> 無法使用 Svelte 特殊語法的問題，但結構上其實還是不像 react / vue custom hooks 那麼漂亮，太複雜的情境可能會出現包很多層的狀況。</p><p>另一個選擇就是改用 store，但因為也不能使用 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$ prefix</code></a> ，寫起來相對費工。</p><p>Vue 的 <a href="https://vuejs.org/guide/extras/reactivity-transform.html" target="_blank" rel="noopener noreferrer">Reactivity Transform</a> 因為有 compile <code>.js</code> / <code>.ts</code> 而且寫法就是原生的 js 所以就不用擔心這個問題，但個人認為 <a href="https://vuejs.org/guide/extras/reactivity-transform.html#retaining-reactivity-across-function-boundaries" target="_blank" rel="noopener noreferrer">Retaining Reactivity Across Function Boundaries</a> 其實更難維護，所以 Vue 的話我可能會使用一般的 <code>ref()</code>， <a href="https://vuejs.org/guide/extras/reactivity-transform.html" target="_blank" rel="noopener noreferrer">Reactivity Transform</a> 還是需要觀望一下。</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="個人結論">個人結論<a class="hash-link" href="#個人結論" title="標題的直接連結">​</a></h2><p>綜合以上，我自己可能會在小巧、不需要包太多 component 、大多使用 vanilla elements 就能解決的靜態網站可以考慮使用 SvelteKit ；需要複雜功能的 app 應該還是會優先選擇 React 或 Vue ，尤其是拓展性 React 是相對簡單暴力的，但也仍然很期待 Svelte 未來的發展。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="review" term="review"/>
        <category label="svelte" term="svelte"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[likftc]]></title>
        <id>/2022/02/22/likftc</id>
        <link href="https://vdustr.dev/blog/2022/02/22/likftc"/>
        <updated>2022-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[List item keys for transition components.]]></summary>
        <content type="html"><![CDATA[<p>寫了一個小 library: <a href="https://vdustr.dev/likftc/" target="_blank" rel="noopener noreferrer">likftc</a></p><p>List item keys for transition components.</p><p>支援 react, vue, svelte</p><p><a href="https://vdustr.dev/likftc/" target="_blank" rel="noopener noreferrer"><img src="https://vdustr.dev/asset-2022/02-22-likftc/ogimage.png" alt="likftc"></a></p><p>在玩 Svelte 的時候發現了一個現象， Svelte 的 <a href="https://svelte.dev/docs#template-syntax-element-directives-animate-fn" target="_blank" rel="noopener noreferrer"><code>animate:flip</code></a> 會和 <a href="https://svelte.dev/docs#template-syntax-element-directives-transition-fn" target="_blank" rel="noopener noreferrer"><code>transition:fn</code></a> 在 list item 快速變動時會發生衝突，造成某些 item 卡在不正確的地方。原因是在 component 的控制下， list item 是使用 key 來判斷是否使用同一個 DOM，無論是 framework 或 compiler 本身沒有將這件事情處理好，就有可能在 leaving (svelte 叫 outro) 時馬上又 render 相同 key 的 list item 時， component 又馬上拿同一個 dom 開始執行 entering (svelte 叫 intro) 的動畫，當這個動畫是使用 js 處理時就會打架。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/svelte" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/svelte</a></p><p>這個衝突只有在使用 js spring function 的時候發生，所以像 <a href="https://vdustr.dev/likftc/vue" target="_blank" rel="noopener noreferrer">Vue demo</a> 中使用 css 動畫頂多也是直接瞬移而已，並不會出現特別奇怪的畫面，使用 <a href="https://github.com/VdustR/likftc" target="_blank" rel="noopener noreferrer"><code>likftc</code></a> 的話也只是已經進入 leaving 的 component 直接 fade out 而新的就直接 render 新的 list item ，我認為沒有像 <a href="https://vdustr.dev/likftc/svelte" target="_blank" rel="noopener noreferrer">Svelte</a> 那麼必要。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/vue" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/vue</a></p><p>React 的部分我使用 <a href="https://github.com/aholachek/react-flip-toolkit" target="_blank" rel="noopener noreferrer">React FLIP Toolkit</a> 。情況比較特殊，他本身其實只有處理 FLIP 的部分，並沒有處理 entering 和 leaving，但他有提供 <code>onAppear</code> 和 <code>onExit</code> 等 event props 可以讓你在相對應的時間點對 element 執行其他行為。若使用 js 控制就會遇到和 svelte 類似的問題，這個問題甚至在 <a href="https://codesandbox.io/s/4q7qpkn8q0" target="_blank" rel="noopener noreferrer">官方範例</a> 都可以快速切換重現 (先按 exitAndFlipThenEnter 然後在動畫結束之前馬上按 exitThenFlipThenEnter) 。 但如果只是像 <a href="https://vdustr.dev/likftc/react/" target="_blank" rel="noopener noreferrer">React demo</a> 在 onAppear 和 onExit 直接使用 css (這裡使用 <a href="https://animate.style/" target="_blank" rel="noopener noreferrer">Animate.css</a>) 而不使用 js 來控制的話感覺就比較沒差。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/react" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/react</a></p><p>如果還是想使用 React FLIP Toolkit spring function 的 entering 和 leaving 可以參考 <a href="https://github.com/VdustR/likftc/blob/dd396932913177e64a7914a18bb159ee44885d14/packages/doc/src/lib/demo/react-flip-toolkit/With.tsx" target="_blank" rel="noopener noreferrer">這裡</a>。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="animate" term="animate"/>
        <category label="css" term="css"/>
        <category label="flip" term="flip"/>
        <category label="javascript" term="javascript"/>
        <category label="likftc" term="likftc"/>
        <category label="move" term="move"/>
        <category label="spring" term="spring"/>
        <category label="transition" term="transition"/>
        <category label="typescript" term="typescript"/>
        <category label="vue" term="vue"/>
        <category label="svelte" term="svelte"/>
        <category label="react" term="react"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Forked rollup-plugin-rename-extensions]]></title>
        <id>/2022/02/08/forked-rollup-plugin-rename-extensions</id>
        <link href="https://vdustr.dev/blog/2022/02/08/forked-rollup-plugin-rename-extensions"/>
        <updated>2022-02-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[臨時 fork 了 一個 repo 解決 rollup-plugin-typescript2 + @betit/rollup-plugin-rename-extensions 無法並存 tslib.js 和 tslib.cjs 的問題。]]></summary>
        <content type="html"><![CDATA[<p>臨時 fork 了 一個 repo 解決 rollup-plugin-typescript2 + @betit/rollup-plugin-rename-extensions 無法並存 tslib.js 和 tslib.cjs 的問題。</p><p><a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer"><img src="https://vdustr.dev/asset-2022/02-08-forked-rollup-plugin-rename-extensions/ogimage.png" alt="Forked rollup-plugin-rename-extensions"></a></p><p><a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">Repo 點這裡</a></p><p>在打包 library 時我並不喜歡使用像 <a href="https://github.com/jaredpalmer/tsdx" target="_blank" rel="noopener noreferrer">tsdx</a> 等 bundle 的方式，而是比較喜歡 <a href="https://rollupjs.org/guide/en/#outputpreservemodules" target="_blank" rel="noopener noreferrer">preserveModules</a> 保留原始結構，使用上能有更大的彈性。</p><p>目前為止 <a href="https://github.com/ezolenko/rollup-plugin-typescript2" target="_blank" rel="noopener noreferrer"><code>rollup-plugin-typescript2</code></a> 是我認為打包效果較好的工具，可以保留原始結構，也能生成結構一致的 <code>.d.ts</code>，並且對 <a href="https://github.com/Microsoft/tslib" target="_blank" rel="noopener noreferrer">tslib</a> 進行 tree shaking 並放到 <code>_virtual/_tslib.js</code>。</p><p>基於某些工具對 esm 支援仍不是很完美，我想同時打包 .js (esm) 和 .cjs 時，找到了個不錯的 <a href="https://github.com/GiG/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">@betit/rollup-plugin-rename-extensions</a> 可以在 rollup build 時同時對副檔名進行調整，遺憾的是其依賴的 <a href="https://github.com/rollup/plugins/blob/6cd15b9/packages/pluginutils/src/createFilter.ts#L48" target="_blank" rel="noopener noreferrer">@rollup/pluginutils createFilter</a> 並不支援 <code>\0tslib.js</code> 這種 <code>facadeModuleId</code> ，或是說根本是直接將之排除在外了，因此我 fork 了 <a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">@vdustr/rollup-plugin-rename-extensions</a> 並加了一個 match option 來直接比對原始的 <code>facadeModuleId</code> 。</p><p>實際使用狀況的話可以參考<a href="https://github.com/VdustR/likftc/blob/59b66c2/script/rollup.config.js#L43" target="_blank" rel="noopener noreferrer">這裡</a>。</p><p>最後，我認為這只是暫時性的解法，目前只是先讓他能達到預期的效果而已，應該有更好更簡單的做法，歡迎大家來 <a href="http://ganhuaking.tw/" target="_blank" rel="noopener noreferrer">Discord 群</a> 一起交流。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="rollup" term="rollup"/>
        <category label="npm" term="npm"/>
        <category label="library" term="library"/>
        <category label="typescript" term="typescript"/>
        <category label="esm" term="esm"/>
        <category label="cjs" term="cjs"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML To Svelte]]></title>
        <id>/2022/01/27/html-to-svelte</id>
        <link href="https://vdustr.dev/blog/2022/01/27/html-to-svelte"/>
        <updated>2022-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在先前寫的 Example for Svelte + TS + Vite + MDsveX 時，存在使用 shiki 將 code 轉為 html ，再將 html 作為 svelte component 使用的需求……]]></summary>
        <content type="html"><![CDATA[<p><img src="https://vdustr.dev/asset-2022/01-27-html-to-svelte/og.png" alt="HTML To Svelte"></p><p>在先前寫的 <a href="/blog/2021/12/25/example-vite-svelte-markdown/">Example for Svelte + TS + Vite + MDsveX</a> 時，存在使用 <a href="https://github.com/shikijs/shiki" target="_blank" rel="noopener noreferrer">shiki</a> 將 code 轉為 html ， <a href="https://github.com/VdustR/example-vite-svelte-markdown/blob/2f218cd/vite.config.js#L14" target="_blank" rel="noopener noreferrer">再將 html 作為 svelte component 使用</a> 的需求……</p><p>由於 shiki 產出的結果就是一堆 <code>&lt;span /&gt;</code> 自然我不太需要擔心 html attributes ，當時的想法是只要將 html tags 的 innerText 都強制轉成 svelte 的字串就好了，於是使用了這樣的方法，讓他使用 svelte element ：</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Prevent removing leading and tailing spaces.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Transform `&lt;div&gt; foo &lt;/div&gt;` into `&lt;div&gt;{' foo '}&lt;/div&gt;`</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * @param {string} html</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">saveSvelteHtmlText</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">replace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex">&gt;( *[^&lt;\n\r]+ *)&lt;</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-flags">g</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> text </span><span class="token operator">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">substring</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator">-</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * We don't need escape text here but we have to transform it into a svelte</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * string.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * For example:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   &lt;div&gt; &amp;lt;div&amp;gt; &lt;/div&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   should be transformed to</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   &lt;div&gt;{" &lt;div&gt; "}&lt;/div&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> unescapeText </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">unescape</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">text</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'&gt;{"'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> unescapeText</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">replace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex">"</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-flags">g</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'\\"'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'"}&lt;'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>本來還覺得因為是直接使用正規而不是使用 parser 一直感到很不安，還寫了一堆註解說明，後來想想既然都是 html 了為什麼不直接用 svelte 原生的 <a href="https://svelte.dev/docs#template-syntax-html" target="_blank" rel="noopener noreferrer"><code>{@html ...}</code></a> 就好了？</p><div class="codeBlockContainer_JM4U language-ts theme-code-block"><div class="codeBlockContent_MyK3 ts"><pre tabindex="0" class="prism-code language-ts codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * @param {string} html</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">htmlToSvelte</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">{@html \`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">html</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(80, 250, 123)">replace</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string interpolation regex regex-delimiter">/</span><span class="token template-string interpolation regex regex-source language-regex">([`$])</span><span class="token template-string interpolation regex regex-delimiter">/</span><span class="token template-string interpolation regex regex-flags">g</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:rgb(255, 121, 198)">"\\$1"</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string string" style="color:rgb(255, 121, 198)">\`}</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>同理 React 也可以使用 <a href="https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml" target="_blank" rel="noopener noreferrer"><code>dangerouslySetInnerHTML</code></a> ， Vue 則使用 <a href="https://vuejs.org/v2/guide/syntax.html#Raw-HTML" target="_blank" rel="noopener noreferrer"><code>v-html</code></a>。</p><p>原來的 repo 也修正了， <a href="https://github.com/VdustR/example-vite-svelte-markdown/commit/c790109" target="_blank" rel="noopener noreferrer">commit 請看這裡</a>。</p><p>真的是有夠 87 🤪</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="svelte" term="svelte"/>
        <category label="shiki" term="shiki"/>
        <category label="html" term="html"/>
        <category label="escape" term="escape"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[新 logo]]></title>
        <id>/2022/01/13/new-logo</id>
        <link href="https://vdustr.dev/blog/2022/01/13/new-logo"/>
        <updated>2022-01-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[繼 2019/01 之後, 久違地更新了 Logo]]></summary>
        <content type="html"><![CDATA[<p><img src="https://vdustr.dev/brand/2022-01/round.png" alt="Round Icon"></p><p>繼 2019/01 之後, 久違地更新了 Logo</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="tech">Tech<a class="hash-link" href="#tech" title="標題的直接連結">​</a></h2><ul><li>Editors:<ul><li><a href="https://github.com/LibreSprite/LibreSprite" target="_blank" rel="noopener noreferrer">LibreSprite</a></li><li><a href="https://designer.gravit.io" target="_blank" rel="noopener noreferrer">Gravit</a></li></ul></li><li>Palette: db32</li><li>Font: <a href="https://github.com/TakWolf/ark-pixel-font" target="_blank" rel="noopener noreferrer">ark-pixel-12px-latin</a></li><li>Converters:<ul><li><a href="https://convertico.com" target="_blank" rel="noopener noreferrer">ConvertICO.com</a></li><li><a href="https://github.com/shrhdk/text-to-svg" target="_blank" rel="noopener noreferrer">text-to-svg</a></li><li><a href="https://github.com/kagof/pixel-perfect-svg" target="_blank" rel="noopener noreferrer">pixel-perfect-svg</a></li></ul></li></ul><p>另外 Docusaurus Palette 使用 <a href="https://swatcherapp.com" target="_blank" rel="noopener noreferrer">Swatcher</a>:</p><ul><li>h dif: -7</li><li>s dif: -10</li><li>b dif: 6</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="source">Source<a class="hash-link" href="#source" title="標題的直接連結">​</a></h2><p><a href="https://github.com/VdustR/brand/tree/main/2022-01" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/brand/tree/main/2022-01</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="license">License<a class="hash-link" href="#license" title="標題的直接連結">​</a></h2><p>CC0</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="logo" term="logo"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pocket]]></title>
        <id>/2022/01/08/pocket</id>
        <link href="https://vdustr.dev/blog/2022/01/08/pocket"/>
        <updated>2022-01-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👀 Stay awhile and listen..]]></summary>
        <content type="html"><![CDATA[<p><a href="https://vdustr.dev/pocket" target="_blank" rel="noopener noreferrer"><img src="https://vdustr.dev/asset-2022/01-08-pocket/og.png" alt="pocket"></a></p><p>最近開始嘗試用 <a href="https://svelte.dev/" target="_blank" rel="noopener noreferrer">Svelte</a> 寫一些東西, 做了這個頁面, 主要是放一些 🔖 書籤和 <a href="https://github.com/VdustR?tab=stars" target="_blank" rel="noopener noreferrer">自己 ⭐ 的 Repositories</a> ， 方便搜尋用。</p><p>書籤的部分會陸續整理補上。</p><p>👉 <a href="https://vdustr.dev/pocket" target="_blank" rel="noopener noreferrer">https://vdustr.dev/pocket</a></p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="pocket" term="pocket"/>
        <category label="star" term="star"/>
        <category label="repository" term="repository"/>
        <category label="github" term="github"/>
        <category label="bookmarks" term="bookmarks"/>
        <category label="svelte" term="svelte"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A TypeScript Fullstack GraphQL CodeGen Example]]></title>
        <id>/2022/01/04/example-graphql-fullstack-codegen</id>
        <link href="https://vdustr.dev/blog/2022/01/04/example-graphql-fullstack-codegen"/>
        <updated>2022-01-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This example will show you how to dev with typescript fullstack with GraphQL Code Generator.]]></summary>
        <content type="html"><![CDATA[<p>最近試了一下 GraphQL CodeGen 產生 react-query 和 resolver type, node server 可以保證回應的型態正確, react-query functions 更可以直接使用, 真ㄉ 4 超方便的 R~</p><p>可以參考這個簡單的範例: <a href="https://github.com/VdustR/example-graphql-fullstack-codegen" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/example-graphql-fullstack-codegen</a></p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="react" term="react"/>
        <category label="graphql" term="graphql"/>
        <category label="typescript" term="typescript"/>
        <category label="apollo" term="apollo"/>
        <category label="vscode" term="vscode"/>
        <category label="visual-studio-code" term="visual-studio-code"/>
        <category label="workspace" term="workspace"/>
        <category label="monorepo" term="monorepo"/>
        <category label="axios" term="axios"/>
        <category label="gql" term="gql"/>
        <category label="fullstack" term="fullstack"/>
        <category label="codegen" term="codegen"/>
        <category label="pnpm" term="pnpm"/>
        <category label="apollo-server" term="apollo-server"/>
        <category label="fastify" term="fastify"/>
        <category label="ts-node" term="ts-node"/>
        <category label="graphql-code-generator" term="graphql-code-generator"/>
        <category label="ts-node-dev" term="ts-node-dev"/>
        <category label="react-query" term="react-query"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Example for Svelte + TS + Vite + MDsveX]]></title>
        <id>/2021/12/25/example-vite-svelte-markdown</id>
        <link href="https://vdustr.dev/blog/2021/12/25/example-vite-svelte-markdown"/>
        <updated>2021-12-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is an example for importing Markdown files as Svelte components.]]></summary>
        <content type="html"><![CDATA[<p>想在 svelte 使用 markdown, 看到已經有大大開發了個套件叫 <a href="https://github.com/pngwn/mdsvex" target="_blank" rel="noopener noreferrer">MDsveX</a>, 然而在使用的時候仍然踩到了一些問題, 寫個簡單的範例紀錄一下, 大部分的問題和解決方法都在 vite.config.js 的註解裡:</p><p>👉 <a href="https://github.com/VdustR/example-vite-svelte-markdown" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/example-vite-svelte-markdown</a></p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="markdown" term="markdown"/>
        <category label="demo" term="demo"/>
        <category label="example" term="example"/>
        <category label="vscode" term="vscode"/>
        <category label="svelte" term="svelte"/>
        <category label="highlight" term="highlight"/>
        <category label="pnpm" term="pnpm"/>
        <category label="md" term="md"/>
        <category label="sveltejs" term="sveltejs"/>
        <category label="vite" term="vite"/>
        <category label="shiki" term="shiki"/>
        <category label="mdsvex" term="mdsvex"/>
        <category label="vitejs" term="vitejs"/>
        <category label="shikijs" term="shikijs"/>
        <category label="html-escaper" term="html-escaper"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Better Discord]]></title>
        <id>/2021/12/21/better-discord</id>
        <link href="https://vdustr.dev/blog/2021/12/21/better-discord"/>
        <updated>2021-12-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[讓 Discord 更美更好用的工具]]></summary>
        <content type="html"><![CDATA[<div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>這篇同時發佈在 <a href="https://ganhuaking.tw/blog/2021/12/11/better-discord/" target="_blank" rel="noopener noreferrer">蔣幹話軟體</a></p></div></div><p>Better Discord 是個能讓 Discord 高度客製的好用工具， 有廣大的社群維護許多好用的 Plugins 和 Themes， 使用者可以依照自己的喜好搭配調整。</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="安裝">安裝<a class="hash-link" href="#安裝" title="標題的直接連結">​</a></h2><p>首先先到 <a href="https://betterdiscord.app/" target="_blank" rel="noopener noreferrer">Better Discord</a> 官網 下載並安裝，</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="安裝-pluginrepo">安裝 PluginRepo<a class="hash-link" href="#安裝-pluginrepo" title="標題的直接連結">​</a></h2><p>安裝完成後 Discord 不需要重啟， 點擊 <img src="https://ganhuaking.tw/asset-2021/12-11-better-discord/userSettings.png" alt="User Settings"> 後理論上會出現一個 Better Discord 的區塊：</p><p><img src="https://ganhuaking.tw/asset-2021/12-11-better-discord/plugins.png" alt="Plugins"></p><p>接著進入 Plugins 頁面並點擊 <a href="https://ganhuaking.tw/asset-2021/12-11-better-discord/openPluginsFolder.png" target="_blank" rel="noopener noreferrer">Open Plugins Folder</a> ，到 <a href="https://betterdiscord.app/plugins?filter=repo" target="_blank" rel="noopener noreferrer">這裡</a> 下載 <a href="https://betterdiscord.app/plugin/PluginRepo" target="_blank" rel="noopener noreferrer">PluginRepo</a> 的 <code>.js</code> 檔後放進剛剛的目錄 ( <a href="https://betterdiscord.app/plugin/ThemeRepo" target="_blank" rel="noopener noreferrer">ThemeRepo</a> 也可以順便 )， 然後回到 Plugins 頁面將 PluginRepo 啟用：</p><p><img src="https://ganhuaking.tw/asset-2021/12-11-better-discord/enablePluginRepo.png" alt="Enable PluginRepo"></p><p>接著會看到設定頁面左側選單多了 PluginRepo 的項目：</p><p><img src="https://ganhuaking.tw/asset-2021/12-11-better-discord/pluginRepo.png" alt="PluginRepo"></p><p>進入之後就可以選擇自己喜歡的 plugins 安裝啦～ ( Theme 同理但是是使用 ThemeRepo)。 依照 Downloads 或 Stars 排序前幾個都滿好用的， 當然也有可能也有遺珠等待大家去發掘了！</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="custom-css">Custom CSS<a class="hash-link" href="#custom-css" title="標題的直接連結">​</a></h2><p>另外除了套用 Theme 也可以在 Custom CSS 的地方調整介面， 例如可以像這樣調整字型：</p><div class="codeBlockContainer_JM4U language-css theme-code-block"><div class="codeBlockContent_MyK3 css"><pre tabindex="0" class="prism-code language-css codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token selector pseudo-class" style="color:rgb(255, 121, 198)">:root</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-primary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-display</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-code</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Consolas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Andale Mono WT'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Andale Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Lucida Console'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Lucida Sans Typewriter'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'DejaVu Sans Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Bitstream Vera Sans Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Liberation Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Nimbus Mono L'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Monaco</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Courier New'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Courier</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> monospace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-headline</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto Nord</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-korean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Apple SD Gothic Neo'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'NanumBarunGothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'맑은 고딕'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Malgun Gothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Gulim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 굴림</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Dotum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 돋움</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-japanese</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Hiragino Sans</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ヒラギノ角ゴ ProN W3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Hiragino Kaku Gothic ProN'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'メイリオ'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Meiryo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Osaka</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'MS PGothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-chinese-simplified</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft YaHei New'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微软雅黑</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft Yahei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    宋体</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> SimSun</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-chinese-traditional</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微軟正黑體</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei UI'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft YaHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微軟雅黑</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 宋体</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> SimSun</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>擅長前端的朋友們也可以自己在 Discord 按 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>I</kbd> ( Mac OS 則是 <kbd>Command⌘</kbd> + <kbd>Option</kbd> + <kbd>I</kbd> ) 來看 style。</p><p>最後結果就能變像這樣子啦~</p><p><img src="https://ganhuaking.tw/asset-2021/12-11-better-discord/final.png" alt="final"></p><ul><li>Theme - <a href="https://betterdiscord.app/theme/Dark%20Matter" target="_blank" rel="noopener noreferrer">DarkMatter</a></li><li>Fonts<ul><li><a href="https://rubjo.github.io/victor-mono/" target="_blank" rel="noopener noreferrer">Victor Mono</a></li><li><a href="https://justfont.com/huninn/" target="_blank" rel="noopener noreferrer">open 粉圓</a></li></ul></li></ul><p>我自己有遇到 Enable Transparency 開啟時 <a href="https://docs.microsoft.com/en-us/windows/powertoys/" target="_blank" rel="noopener noreferrer">PowerToys</a> 的 <a href="https://docs.microsoft.com/en-us/windows/powertoys/fancyzones" target="_blank" rel="noopener noreferrer">FancyZones</a> 無法正確定位的小問題， 關掉就沒事了。</p><p>另外 Better Discord 也有他們自己的 <a href="https://discord.com/invite/0Tmfo5ZbORCRqbAd" target="_blank" rel="noopener noreferrer">Discord Server</a> 。</p>]]></content>
        <author>
            <name>ViPro</name>
            <uri>https://vdustr.dev/</uri>
        </author>
        <category label="discord" term="discord"/>
        <category label="plugin" term="plugin"/>
        <category label="theme" term="theme"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Podman in WSL2]]></title>
        <id>/2021/09/20/podman-in-wsl2</id>
        <link href="https://vdustr.dev/blog/2021/09/20/podman-in-wsl2"/>
        <updated>2021-09-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[3 分鐘 跟 podman 當好朋友]]></summary>
        <content type="html"><![CDATA[<p>3 分鐘 跟 podman 當好朋友</p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="install-wsl2">Install WSL2<a class="hash-link" href="#install-wsl2" title="標題的直接連結">​</a></h2><p>👉 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">Windows Subsystem for Linux Installation Guide for Windows 10</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="install-ubuntu-optional">Install Ubuntu (Optional)<a class="hash-link" href="#install-ubuntu-optional" title="標題的直接連結">​</a></h2><p>👉 <a href="https://www.microsoft.com/en-us/p/ubuntu/9nblggh4msv6" target="_blank" rel="noopener noreferrer">Get Ubuntu - Microsoft Store</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="install-podman">Install podman<a class="hash-link" href="#install-podman" title="標題的直接連結">​</a></h2><p>👉 <a href="https://www.redhat.com/sysadmin/podman-windows-wsl2" target="_blank" rel="noopener noreferrer">How to run Podman on Windows with WSL2</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="install-podman-compose">Install podman-compose<a class="hash-link" href="#install-podman-compose" title="標題的直接連結">​</a></h2><p>Install python3 and pip:</p><div class="codeBlockContainer_JM4U language-bash theme-code-block"><div class="codeBlockContent_MyK3 bash"><pre tabindex="0" class="prism-code language-bash codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> -y </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> python3 python3-venv python3-pip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pip3 </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">podman-compose</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>Notice that you have to add <code>~/.local/bin</code> to <code>PATH</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_XKru" id="integrate-podman-compose-and-fish">Integrate podman-compose and fish<a class="hash-link" href="#integrate-podman-compose-and-fish" title="標題的直接連結">​</a></h3><p>Install the latest fish shell for <a href="https://fishshell.com/docs/current/cmds/fish_add_path.html" target="_blank" rel="noopener noreferrer"><code>fish_add_path</code></a> if your fish is &lt; <code>3.3.0</code>:</p><div class="codeBlockContainer_JM4U language-bash theme-code-block"><div class="codeBlockContent_MyK3 bash"><pre tabindex="0" class="prism-code language-bash codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Check version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ fish -v</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">fish, version </span><span class="token number">3.3</span><span class="token plain">.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> apt-add-repository ppa:fish-shell/release-3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> fish</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><p>Check the <a href="https://fishshell.com/" target="_blank" rel="noopener noreferrer">official document</a> if you use another distribution.</p><p>Add into <code>~/.config/fish/config.fish</code>:</p><div class="codeBlockContainer_JM4U language-bash theme-code-block"><div class="codeBlockContent_MyK3 bash"><pre tabindex="0" class="prism-code language-bash codeBlock_PYqy thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_tZk4"><span class="token-line" style="color:#F8F8F2"><span class="token plain">fish_add_path ~/.local/bin</span><br></span></code></pre><button type="button" aria-label="複製代碼至剪貼簿" class="copyButton_Z6K4 clean-btn">複製</button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_XKru" id="reference">Reference<a class="hash-link" href="#reference" title="標題的直接連結">​</a></h2><ul><li><a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">Windows Subsystem for Linux Installation Guide for Windows 10</a></li><li><a href="https://www.redhat.com/sysadmin/podman-windows-wsl2" target="_blank" rel="noopener noreferrer">How to run Podman on Windows with WSL2</a></li></ul>]]></content>
        <author>
            <name>ViPro</name>
        </author>
        <category label="podman" term="podman"/>
        <category label="podman-compose" term="podman-compose"/>
        <category label="container" term="container"/>
        <category label="wsl2" term="wsl2"/>
        <category label="windows" term="windows"/>
        <category label="fish" term="fish"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrate to Docusaurus v2]]></title>
        <id>/2021/04/01/move-to-docusaurus</id>
        <link href="https://vdustr.dev/blog/2021/04/01/move-to-docusaurus"/>
        <updated>2021-04-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is my first post on Docusaurus 2.]]></summary>
        <content type="html"><![CDATA[<p>I migrated my site to Docusaurus v2.</p><p>剛好今天愚人節。之後會開始在這邊寫開發紀錄吧！</p>]]></content>
        <author>
            <name>ViPro</name>
        </author>
        <category label="hello" term="hello"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
</feed>