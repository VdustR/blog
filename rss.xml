<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>ViPro's Blog Blog</title>
        <link>https://vdustr.dev/blog/</link>
        <description>ViPro's Blog Blog</description>
        <lastBuildDate>Mon, 02 Jan 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hant</language>
        <item>
            <title><![CDATA[cspell]]></title>
            <link>https://vdustr.dev/blog/2023/01/02/cspell</link>
            <guid>/2023/01/02/cspell</guid>
            <pubDate>Mon, 02 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A spell checker for code!]]></description>
            <content:encoded><![CDATA[<blockquote><p>A spell checker for code!</p></blockquote><p><img loading="lazy" src="https://vdustr.dev/asset-2023/01-02-cspell/ogimage.png" alt="cspell" class="img_qxSE"></p><p>2023 新年快樂！連假來一發～</p><p>實在是很討厭在 repository 裡寫錯字， <a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener noreferrer">Code Spell Checker</a> (以下簡稱 <a href="https://cspell.org/" target="_blank" rel="noopener noreferrer">cspell</a>) 是我在 VSCode 愛用的擴充套件之一。然而一直到這份新工作才將他使用到高度協作的專案裡，也有一些額外的設定及用法上的心得可以分享。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="repository-configuration">Repository Configuration<a class="hash-link" href="#repository-configuration" title="標題的直接連結">​</a></h2><p>cspell 本身除了 Visual Studio Code extension 外，也有提供 CLI 可以使用，因此建議將設定自 <code>/.vscode/settings.json</code> 移至 <code>/cspell.json</code>。可以透過 <kbd>ctrl / ⌘</kbd> + <kbd>shift</kbd> + <kbd>p</kbd> 輸入 <code>cspell</code> 找到:</p><blockquote><p>Spell: Create a CSpell Configuration File.</p></blockquote><p><img loading="lazy" src="https://vdustr.dev/asset-2023/01-02-cspell/create-config.png" alt="cspell" class="img_qxSE"></p><p>然後再選擇 <code>cspell.json</code>.</p><p>以下是推薦的設定：</p><div class="language-json codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-json codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 包含 dot files</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"enableGlobDot"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 檢查所有檔案</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"files"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"**"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 要忽略的檔案。以下是範例，您可以自行調整。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// `.gitignore` 所列的檔案會被自動忽略所以不需要在這裡列出。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"ignorePaths"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"/.git"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/.gitignore"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/package-lock.json"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 略過路徑匹配 `.gitignore` 所列 globs 的檔案</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"useGitignore"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 因為合併字像是 `autofix`, `typecheck` 等等很常出現所以建議開啟。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"allowCompoundWords"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 對所有檔案類型啟用, 預設如 `.env` 這類的 `ini` 檔不會被檢查</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"enableFiletypes"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"*"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 僅檢查拉丁字。 某些字如 `ภาษาไทย` 基於某種原因會被 cspell 判斷為錯字。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"includeRegExpList"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"[\u0020-\u024F]"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// 被我們承認的額外單字都加在這裡</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"words"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>設定完之後直接執行以下語法就可以檢查了：</p><div class="codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-text codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npm exec cspell</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">yarn cspell</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pnpm exec cspell</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="git-hooks">Git hooks<a class="hash-link" href="#git-hooks" title="標題的直接連結">​</a></h2><p>可以搭配 <a href="https://github.com/typicode/husky" target="_blank" rel="noopener noreferrer">husky</a> + <a href="https://github.com/okonet/lint-staged" target="_blank" rel="noopener noreferrer">lint-staged</a>:</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// lint-staged.config.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string-property property">"**"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"cspell lint --no-must-find-files"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">module</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">exports </span><span class="token operator">=</span><span class="token plain"> config</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果您的設定是在其他位置的話請參考上述設定調整， <code>husky</code> 及 <code>lint-staged</code> 如何設定在這裡就不另外贅述。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="github-actions">GitHub Actions<a class="hash-link" href="#github-actions" title="標題的直接連結">​</a></h2><p>我們在公司專案使用這個 action: <a href="https://github.com/streetsidesoftware/cspell-action" target="_blank" rel="noopener noreferrer">streetsidesoftware/cspell-action</a> 。 感謝 <a href="https://github.com/Joseph7451797" target="_blank" rel="noopener noreferrer">Joseph</a> 。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="in-document">In Document<a class="hash-link" href="#in-document" title="標題的直接連結">​</a></h2><p>有些字可以被允許在單一文件中而不需要被全域加入，建議使用以下語法：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// cSpell:words autofix typecheck</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果該字本身不具意義只是單純的 dummy data，可以使用下列語法：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> directions </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"wsad"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// cSpell:disable-line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// cSpell:disable-next-line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> directions </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"wsad"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// cSpell:disable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> dummy1 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"qwerqwer"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> dummy2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"asdfasdf"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> dummy3 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"zxcvzxcv"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// cSpell:enable</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>但也有一些限制，像是 <code>package.json</code> 一般情況就無法加入註解。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="tips">Tips<a class="hash-link" href="#tips" title="標題的直接連結">​</a></h2><ul><li>集中 dummy data，再由其他檔案 import 使用。或是使用 <a href="https://fakerjs.dev/" target="_blank" rel="noopener noreferrer">Faker</a>, <a href="https://github.com/chancejs/chancejs" target="_blank" rel="noopener noreferrer">Chance</a> 這類的套件產生資料。但我個人傾向使用前者，諸如測試等情況隨機產生資料會讓測試結果不可預期。</li><li>為測試 overflow 有時會刻意輸入長字串， <code>pneumonoultramicroscopicsilicovolcanoconiosis</code> (火山矽肺症) 在一些情況很好用，但因為很長，同樣建議宣告一次，再由其他檔案 import 使用。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="reference">Reference<a class="hash-link" href="#reference" title="標題的直接連結">​</a></h2><ul><li><a href="https://cspell.org/" target="_blank" rel="noopener noreferrer">CSpell</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener noreferrer">Visual Studio Code - Spell Checker</a></li></ul>]]></content:encoded>
            <category>cspell</category>
            <category>ci</category>
            <category>lint</category>
        </item>
        <item>
            <title><![CDATA[gsvt - Git Semantic Version Tags]]></title>
            <link>https://vdustr.dev/blog/2022/09/24/gsvt</link>
            <guid>/2022/09/24/gsvt</guid>
            <pubDate>Sat, 24 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[透過 gsvt 懶人工具幫打 major, minor version tags 並發布 GitHub Actions。]]></description>
            <content:encoded><![CDATA[<blockquote><p>久違的更新，內容有一部分都是 <a href="https://github.com/features/copilot" target="_blank" rel="noopener noreferrer">GitHub Copilot</a> 跟 <a href="https://translate.google.com/" target="_blank" rel="noopener noreferrer">Google Translate</a> 幫我寫的，阿斯~</p></blockquote><p>通常我們在使用別人的 GitHub Actions 時，都能透過如 <code>v2</code>, <code>v2.3</code> 這種只打到 major 或 minor 的方式取得 <code>v2.x.x</code> 的最新版本，一直到自己 publish 自己的 GitHub Action 才發現他並不會像 npm 一樣自動解析，必須自己將 <code>vX</code>, <code>vX.X</code> 這樣的 tag push 到 repo 才行，但每次都要 force tag / force push 總是有點麻煩，一直找不到類似的工具，稍微弄了了個小工具來快速打版。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/09-24-gsvt/gsvt-cover.png" alt="gsvt" class="img_qxSE"></p><blockquote><p>We recommend creating releases using semantically versioned tags – for example, <code>v1.1.3</code> – and keeping major (<code>v1</code>) and minor (<code>v1.1</code>) tags current to the latest appropriate commit. For more information, see "<a href="https://docs.github.com/en/actions/creating-actions/about-custom-actions#using-release-management-for-actions" target="_blank" rel="noopener noreferrer">About custom actions</a>" and "<a href="https://docs.npmjs.com/about-semantic-versioning" target="_blank" rel="noopener noreferrer">About semantic versioning</a>. -- <a href="https://docs.github.com/en/actions/creating-actions/releasing-and-maintaining-actions#:~:text=We%20recommend%20creating%20releases%20using%20semantically%20versioned%20tags%20%E2%80%93%20for%20example%2C%20v1.1.3%20%E2%80%93%20and%20keeping%20major%20(v1)%20and%20minor%20(v1.1)%20tags%20current%20to%20the%20latest%20appropriate%20commit.%20For%20more%20information%2C%20see%20%22About%20custom%20actions%22%20and%20%22About%20semantic%20versioning." target="_blank" rel="noopener noreferrer">Releasing and maintaining actions - GitHub Docs</a></p></blockquote><p>使用方式很簡單，只要再 GitHub Action repository 下執行以下指令即可:</p><div class="language-sh codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-sh codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx gsvt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx gsvt patch</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx gsvt minor</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx gsvt major</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx gsvt v3.4.5</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此 <code>v3.4.5</code>, <code>v3.4</code>, <code>v3</code> 就自動打上了。</p><p>然後將 tags push 到 GitHub 上:</p><div class="language-sh codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-sh codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">git push origin main --tags -f</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著到 GitHub 上的 release 頁面，點擊 <code>Draft a new release</code>，選擇剛剛打的 tag (<code>v3.4.5</code>)，就可以發布 release 了。 之後使用者便能透過 <code>v3.4.5</code>, <code>v3.4</code>, <code>v3</code> 來使用這個 GitHub Action。</p><p>⚠️ 注意 <code>gsvt</code> 目前尚不支援 <code>v*.*.*</code> 以外的版本號格式。ㄅ欠</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="links">Links<a class="hash-link" href="#links" title="標題的直接連結">​</a></h2><ul><li>Repository: <a href="https://github.com/VdustR/gsvt" target="_blank" rel="noopener noreferrer">VdustR/gsvt</a></li><li>npm: <a href="https://www.npmjs.com/package/gsvt" target="_blank" rel="noopener noreferrer">gsvt</a></li></ul>]]></content:encoded>
            <category>action</category>
            <category>ci</category>
            <category>cli</category>
            <category>git</category>
            <category>node</category>
            <category>semantic</category>
            <category>semver</category>
            <category>version</category>
        </item>
        <item>
            <title><![CDATA[PTT Custom Theme 🎨]]></title>
            <link>https://vdustr.dev/blog/2022/04/08/term-ptt-custom-theme</link>
            <guid>/2022/04/08/term-ptt-custom-theme</guid>
            <pubDate>Fri, 08 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[自訂 term.ptt.cc 的主題。]]></description>
            <content:encoded><![CDATA[<p>自訂 <a href="https://term.ptt.cc" target="_blank" rel="noopener noreferrer">term.ptt.cc</a> 的主題。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/og.png" alt="term-ptt-custom-theme" class="img_qxSE"></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="簡介">簡介<a class="hash-link" href="#簡介" title="標題的直接連結">​</a></h2><p>這篇文可以協助您自訂 <a href="https://term.ptt.cc" target="_blank" rel="noopener noreferrer">term.ptt.cc</a> 主題。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="教學">教學<a class="hash-link" href="#教學" title="標題的直接連結">​</a></h2><p>請先安裝 <a href="https://www.tampermonkey.net/" target="_blank" rel="noopener noreferrer">Tampermonkey</a> 或 <a href="https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/" target="_blank" rel="noopener noreferrer">Greasemonkey</a> 。</p><p>以 Chrome Tampermonkey 為例，打開 Dashboard :</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/steps/dashboard.png" alt="Open Dashboard" class="img_qxSE"></p><p>新增腳本:</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/steps/create.png" alt="Create A Script" class="img_qxSE"></p><p>將 <a href="https://github.com/VdustR/term-ptt-custom-theme#usage" target="_blank" rel="noopener noreferrer">教學</a> 的內容複製、貼上、存檔即可，打開新的 tab 就會套用新主題囉～色碼可以自行替換。</p><p>另外也提供了 <a href="https://github.com/VdustR/term-ptt-custom-theme#gogh" target="_blank" rel="noopener noreferrer">Goph Themes</a> 的使用方式，同樣複製、貼上、存檔即可。 Theme Name 可以到 <a href="https://mayccoll.github.io/Gogh/" target="_blank" rel="noopener noreferrer">這裡</a> 找喜歡的替換。</p><p>記得確認腳本是否啟用。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/steps/active.png" alt="Check active" class="img_qxSE"></p><p>另外我自己做了一個 <a href="https://github.com/VdustR/term-ptt-retro-theme" target="_blank" rel="noopener noreferrer">term-ptt-retro-theme</a> ，馬上就用上昨天 po 的 <a href="https://github.com/VdustR/gruvbox.css" target="_blank" rel="noopener noreferrer">gruvbox.css</a> 色票和 <a href="https://github.com/TakWolf/fusion-pixel-font" target="_blank" rel="noopener noreferrer">Fusion Pixel Font</a> 像素字型。使用方式同樣直接複製、貼上、存檔即可。使用點陣字型須另外在右鍵設定選單中手動修改字型:</p><div class="codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-text codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Fusion Pixel PTT,MingLiu,SymMingLiu,monospace</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以下是成品：</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/retro.png" alt="term-ptt-retro-theme" class="img_qxSE"></p><p>另外如果不喜歡預設字型的話，也可以使用 <a href="https://github.com/justfont/open-huninn-font" target="_blank" rel="noopener noreferrer">jf open 粉圓</a> (需另外自行安裝，安裝新的字型之後需要重新啟動瀏覽器才能使用該字型) :</p><div class="codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-text codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">SymMingLiu,"jf-openhuninn-1.1",MingLiu,monospace</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>大部分中文字型只要放在 <code>SymMingLiu</code> 這個字型後面就可以使用了，缺點是英文、數字、符號等就不是同一個字型。</p><p>Goph Graph Theme + <a href="https://github.com/justfont/open-huninn-font" target="_blank" rel="noopener noreferrer">jf open 粉圓</a> 範例:</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-08-term-ptt-custom-theme/graph.png" alt="term-ptt-retro-theme" class="img_qxSE"></p><p>如果您剛好有 GitHub 帳號也喜歡這個專案的話歡迎幫我按個星星～ 感謝 &gt;"&lt;</p><ul><li><a href="https://github.com/VdustR/term-ptt-custom-theme" target="_blank" rel="noopener noreferrer">term-ptt-custom-theme</a></li><li><a href="https://github.com/VdustR/term-ptt-retro-theme" target="_blank" rel="noopener noreferrer">term-ptt-retro-theme</a></li></ul><p>有任何疑問或是建議也歡迎使用任何可以聯絡得到我的方式一起交流～ 發 issue 也 ok ～</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="alternative">Alternative<a class="hash-link" href="#alternative" title="標題的直接連結">​</a></h2><ul><li><a href="https://github.com/Petingo/PTT-Theme" target="_blank" rel="noopener noreferrer">Petingo/PTT-Theme</a></li></ul>]]></content:encoded>
            <category>css</category>
            <category>theme</category>
            <category>color</category>
            <category>palette</category>
            <category>customization</category>
            <category>pixel</category>
            <category>retro</category>
            <category>greasemonkey</category>
            <category>tampermonkey</category>
            <category>ptt</category>
        </item>
        <item>
            <title><![CDATA[gruvbox.css 🎨]]></title>
            <link>https://vdustr.dev/blog/2022/04/07/gruvbox-css</link>
            <guid>/2022/04/07/gruvbox-css</guid>
            <pubDate>Thu, 07 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[gruvbox css variables.]]></description>
            <content:encoded><![CDATA[<p>gruvbox css variables.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-07-gruvbox-css/dark.png" alt="Palette Dark" class="img_qxSE"></p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/04-07-gruvbox-css/light.png" alt="Palette Light" class="img_qxSE"></p><blockquote><p>gruvbox is heavily inspired by badwolf, jellybeans and solarized.</p><p>Designed as a bright theme with pastel 'retro groove' colors and light/dark mode switching in the way of solarized. The main focus when developing gruvbox is to keep colors easily distinguishable, contrast enough and still pleasant for the eyes.</p></blockquote><p>👉 Check <a href="https://github.com/morhetz/gruvbox" target="_blank" rel="noopener noreferrer">gruvbox - Retro groove color scheme for Vim</a></p><p>滿喜歡這組色票就做了一個 css library 。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="links">Links<a class="hash-link" href="#links" title="標題的直接連結">​</a></h2><ul><li>🎨 gruvbox: <a href="https://github.com/morhetz/gruvbox" target="_blank" rel="noopener noreferrer">https://github.com/morhetz/gruvbox</a></li><li>💻 Repository: <a href="https://github.com/VdustR/gruvbox.css" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/gruvbox.css</a></li><li>💾 NPM: <a href="https://www.npmjs.com/package/gruvbox.css" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/gruvbox.css</a></li><li>📦 CodeSandbox: <a href="https://codesandbox.io/s/gruvbox-css-demo-mjyeyr" target="_blank" rel="noopener noreferrer">https://codesandbox.io/s/gruvbox-css-demo-mjyeyr</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="demo">Demo<a class="hash-link" href="#demo" title="標題的直接連結">​</a></h2><iframe src="https://codesandbox.io/embed/gruvbox-css-demo-mjyeyr?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="gruvbox.css Demo" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p><a href="https://mjyeyr.csb.app/" target="_blank" rel="noopener noreferrer">👉 Open preview</a></p>]]></content:encoded>
            <category>color</category>
            <category>css</category>
            <category>gruvbox</category>
            <category>palette</category>
            <category>theme</category>
        </item>
        <item>
            <title><![CDATA[Aspect Ratio Calculator with Jotai 👻]]></title>
            <link>https://vdustr.dev/blog/2022/03/30/aspect-ratio-calculator</link>
            <guid>/2022/03/30/aspect-ratio-calculator</guid>
            <pubDate>Wed, 30 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[因為畫圖的需要，做了一個簡單的等比例計算機。這篇除了展示成果之外也會就使用的 Jotai 的心得做一些簡單的討論，也包含和 zustand 和 React context 的比較。]]></description>
            <content:encoded><![CDATA[<p>因為畫圖的需要，做了一個簡單的等比例計算機。</p><p>這篇除了展示成果之外也會就使用的 Jotai 的心得做一些簡單的討論，也包含和 zustand 和 React context 的比較。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="aspect-ratio-calculator">Aspect Ratio Calculator<a class="hash-link" href="#aspect-ratio-calculator" title="標題的直接連結">​</a></h2><iframe src="https://codesandbox.io/embed/aspect-ratio-calculator-77cxz7?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Aspect Ratio Calculator" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p><a href="https://77cxz7.csb.app/" target="_blank" rel="noopener noreferrer">👉 Open preview</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="zustand">Zustand<a class="hash-link" href="#zustand" title="標題的直接連結">​</a></h2><p>在這之前我個人比較常使用的 state management 是 <a href="https://github.com/pmndrs/zustand" target="_blank" rel="noopener noreferrer">zustand</a> 。當初先嘗試 zustand 的動機，其實是來自一封 <a href="https://www.buildable.dev/" target="_blank" rel="noopener noreferrer">Buildable.dev</a> 的 <a href="https://twitter.com/spataroinc" target="_blank" rel="noopener noreferrer">Daniel Spataro</a> 的信，裡面介紹了他們家的產品，另外也推薦我嘗試使用 zustand 。研究了一下文件之後覺得 zustand 的 API 非常簡單， bundle size 也非常小，並且可以輕易地和 React tree 之外的東西互動，例如：我們之前就有在 axios instance 的 interceptors 裡面更新 request token ，而這個 token 正好就能使用 <a href="https://github.com/pmndrs/zustand#using-zustand-without-react" target="_blank" rel="noopener noreferrer">zustand/vallina</a> 來管理，使 react 外的事件或資料可以和 react components 互動。主要是在 refresh token 失敗的時候會將該 store 清空，觸發 react component 顯示已登出的提示。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="jotai">Jotai<a class="hash-link" href="#jotai" title="標題的直接連結">​</a></h2><p>一開始是想找 zustand memo computed 的方法，後來找到這篇: <a href="https://github.com/pmndrs/zustand/issues/132" target="_blank" rel="noopener noreferrer">Using getter to calculate computed values #132</a> ，決定嘗試使用 Jotai 。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="比較">比較<a class="hash-link" href="#比較" title="標題的直接連結">​</a></h2><p>建議可以先看 <a href="https://github.com/dai-shi" target="_blank" rel="noopener noreferrer">dai-shi</a> 寫的比較。</p><ul><li><a href="https://github.com/pmndrs/jotai/issues/13" target="_blank" rel="noopener noreferrer">How is jotai different from zustand? #13</a></li><li><a href="https://jotai.org/docs/basics/comparison#how-is-jotai-different-from-zustand?" target="_blank" rel="noopener noreferrer">How is Jotai different from Zustand?</a></li></ul><p>兩者的設計方向完全不一樣，解決不一樣的問題。我個人是認為視情況兩個都使用也沒什麼問題。我主要會提一些在上面文章以外的想法。</p><p>先從我一開始的需求開始說起。</p><p>在 zustand 中如果要 memo computed value ，一般會這樣做：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Memoizing selectors</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * https://github.com/pmndrs/zustand#memoizing-selectors</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> selector</span><span class="token operator">:</span><span class="token plain"> Parameters</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> useStore</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> myValue </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> myValue </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">MyComponent</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> myValue </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useStore</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">selector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> computedValue </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useMemo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">heavyComputeFn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">myValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">myValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">/* ... */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>像這樣的情況如果 <code>MyComponent</code> 被拿來一次渲染多個 Node 或是有其他 component 使用同樣的 <code>heavyComputeFn()</code> ，相同的計算就會被重複執行；</p><p>Jotai 的方式是：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> derivedAtom </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">atom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">heavyComputeFn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token function" style="color:rgb(80, 250, 123)">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">myAtom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">MyComponent</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> computedValue </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useAtomValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">derivedAtom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">/* ... */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>相同的情況下 <code>heavyComputeFn()</code> 就只會執行一次。</p><p>除了解決上面的需求外， Jotai 還有以下優點：</p><ul><li>Jotai 不需要做 <a href="https://github.com/pmndrs/zustand#memoizing-selectors" target="_blank" rel="noopener noreferrer">zustand Memoizing selectors</a> 的優化。</li><li>Jotai atom 可以自訂 update function ，通常會設計得有點像 reducer ，這個部分雖然我比較喜歡 zustand 的寫法，但一般的使用情況下 zustand 只能使用同一個 store 內的資料，而 jotai 可以自由地依賴其他 atom。個人十分建議把邏輯可能會被共用的部分都使用 atom 來處理，沒用到的時候都不會被執行，執行的時候最多也只有一次，而因為 atom 都是同一個 instance 所以 atom props 的傳遞也不會造成 re-render 。</li></ul><p>兩者的 Provider 都無法取代 Context Provider ，他們的 props 都是 initial value 而不能 always computed 。 在 <a href="https://codesandbox.io/s/aspect-ratio-calculator-77cxz7" target="_blank" rel="noopener noreferrer">Aspect Ratio Calculator</a> 內我將 atom 全部都丟進 Context Provider 中，雖然在這個範例中沒有明顯的效果，但如果相同 computed atom value 如果在多個 component 被重複使用一樣只會計算一次。我認為這樣使用是沒什麼大問題的，但要記得來自 Provider Props 的值必須在更新的時候也同步到對應的 atom ，而且時間上也晚一個 tick 。如果不是高度重複 heavy compute functon 真的需要減少呼叫次數的極端複雜的情況建議還是使用一般的 Context Provider 即可。可以參考 <a href="https://github.com/pmndrs/jotai/discussions/973" target="_blank" rel="noopener noreferrer">Can Jotai be used in order to replace the React Context API? #973</a> 。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="個人總結">個人總結<a class="hash-link" href="#個人總結" title="標題的直接連結">​</a></h2><ul><li>Global / page context： jotai 和 zustand 都不錯，個人認為 jotai 更勝一籌，主要是 derivedAtom 的部分可以避免重複計算。</li><li>需要和 React tree 之外的事件或資料互動的狀態： 直接 zustand 。</li><li>Local Context / Nested Context ： 目前個人覺得還是 React Context + Provider 比較容易維護， <strong>真的有必要減少重複相同計算的話</strong> 再考慮在 provider 內塞 atom 。</li></ul><p>我認為沒有哪個比較好，都各自有適合他們的地方。用！都用爆吧！</p>]]></content:encoded>
            <category>react</category>
            <category>jotai</category>
            <category>zustand</category>
            <category>context</category>
        </item>
        <item>
            <title><![CDATA[unplugin-transform-imports]]></title>
            <link>https://vdustr.dev/blog/2022/03/26/unplugin-transform-imports</link>
            <guid>/2022/03/26/unplugin-transform-imports</guid>
            <pubDate>Sat, 26 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[An imports transform unplugin.]]></description>
            <content:encoded><![CDATA[<p>An imports transform unplugin.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-26-unplugin-transform-imports/og.png" alt="unplugin-transform-imports banner" class="img_qxSE"></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="slow-startup-in-development-environment">Slow Startup in Development Environment<a class="hash-link" href="#slow-startup-in-development-environment" title="標題的直接連結">​</a></h2><p>之前有發生 <a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a> 啟動時間超長的狀況，經好友 <a href="https://github.com/yezhi780625" target="_blank" rel="noopener noreferrer">yezhi780625</a> 調查在使用 <a href="https://github.com/TeamWertarbyte/mdi-material-ui" target="_blank" rel="noopener noreferrer"><code>mdi-material-ui</code></a> (特別講這個是因為它很大一包) 的時候雖然使用 ESM 可以 tree shaking，但其實 webpack 在這之前還是會花大量時間載入和 bundle。 後來椰子也找到了 <a href="https://mui.com/guides/minimizing-bundle-size/#development-environment" target="_blank" rel="noopener noreferrer">MUI 的官網也有描述到相同的問題</a> :</p><blockquote><p>Development bundles can contain the full library which can lead to slower startup times. This is especially noticeable if you import from @mui/icons-material. Startup times can be approximately 6x slower than without named imports from the top-level API.</p></blockquote><p>而 MUI 官方也提供了兩種解法，一種就是將：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> Button</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> TextField </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"@mui/material"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>改寫為：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> Button </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"@mui/material/Button"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> TextField </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"@mui/material/TextField"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>另一個方法則是使用 <a href="https://github.com/umijs/babel-plugin-import" target="_blank" rel="noopener noreferrer"><code>babel-plugin-import</code></a> 。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="tree-shaking">Tree Shaking<a class="hash-link" href="#tree-shaking" title="標題的直接連結">​</a></h2><p>除了啟動緩慢的問題之外，另一個常見問題則是像某些 libraries 並沒有提供 <a href="https://nodejs.org/api/esm.html" target="_blank" rel="noopener noreferrer">ESM</a> 因而無法 tree shaking。</p><p>所謂的 Tree shaking 可以簡單理解成在 build distribution 時只會加入有引用到的部分，其餘的不會加入 bundle 裡。</p><blockquote><p>Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code.</p></blockquote><p>想了解更多可以參考這裡:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking" target="_blank" rel="noopener noreferrer">mdn web docs - Tree shaking</a></li><li><a href="https://webpack.js.org/guides/tree-shaking/" target="_blank" rel="noopener noreferrer">webpack - Tree Shaking</a></li><li><a href="https://rollupjs.org/guide/en/#tree-shaking" target="_blank" rel="noopener noreferrer">rollup.js - Tree-Shaking</a></li></ul><p>舉例來說，像這樣的引用方式是會將 lodash 整包載進來的：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> merge </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"lodash"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有下列幾種解決方式：</p><ul><li><p>改用 <a href="https://www.npmjs.com/package/lodash-es" target="_blank" rel="noopener noreferrer"><code>lodash-es</code></a> 。</p></li><li><p>使用 <a href="https://github.com/lodash/babel-plugin-lodash" target="_blank" rel="noopener noreferrer"><code>babel-plugin-lodash</code></a> 。</p></li><li><p>使用 <a href="https://github.com/umijs/babel-plugin-import" target="_blank" rel="noopener noreferrer"><code>babel-plugin-import</code></a> 。</p></li><li><p>改變引用方式：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> merge </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"lodash/merge"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你甚至可以在 <a href="https://eslint.org/docs/rules/no-restricted-imports" target="_blank" rel="noopener noreferrer">eslint 禁止直接引用 <code>"lodash"</code></a> ，而當有設置上列的方法時也可以套用相反的設定。</p><p>但這種方式不適合像 <a href="https://github.com/phosphor-icons/phosphor-react" target="_blank" rel="noopener noreferrer">phosphor-react</a> 這種只有 <code>main.js</code> 有 <code>type.d.ts</code> 的 library，直接引用 <code>phosphor-react/dist/</code> 內的檔案會取不到型別。如果您使用 <a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">vite</a> 的話倒是可以直接引用 <code>phosphor-react/src/</code> 下的檔案，和 webpack 不同 vite 預設並沒有將 <code>node_modules/</code> exclude 因此可以直接引用裡面的 <code>.tsx</code> 。</p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="unplugin-transform-imports">unplugin-transform-imports<a class="hash-link" href="#unplugin-transform-imports" title="標題的直接連結">​</a></h2><p>參考了 <a href="https://github.com/umijs/babel-plugin-import" target="_blank" rel="noopener noreferrer"><code>babel-plugin-import</code></a> 的做法我實作了一個 <code>unplugin-transform-imports</code> 。</p><p>因為基於 <a href="https://github.com/unjs/unplugin" target="_blank" rel="noopener noreferrer">unplugin</a> 所以理論上可以很容易地使用在基於 <a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a>, <a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a>, <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">Webpack</a>, <a href="https://esbuild.github.io/" target="_blank" rel="noopener noreferrer">esbuild</a> 的環境。另外 <code>transformImports()</code> function 能獨立被使用，並支援 typescript 和 ESM。</p><p>另外也提供了幾個範例：</p><ul><li><a href="https://github.com/VdustR/unplugin-transform-imports/tree/d6cc11a/packages/demo-craco" target="_blank" rel="noopener noreferrer">craco</a></li><li><a href="https://github.com/VdustR/unplugin-transform-imports/tree/d6cc11a/packages/demo-vite" target="_blank" rel="noopener noreferrer">vite-react</a></li><li><a href="https://github.com/VdustR/unplugin-transform-imports/tree/d6cc11a/packages/demo-vite-vue" target="_blank" rel="noopener noreferrer">vite-vue</a></li><li><a href="https://github.com/VdustR/unplugin-transform-imports/tree/d6cc11a/packages/demo-vite-svelte" target="_blank" rel="noopener noreferrer">vite-svelte</a></li></ul><p>其中 craco 的範例下 <code>pnpm start</code> 的時間就能從 22427 ms 優化到 3313 ms (AMD Ryzen 9 5900HS) ； Distribution 的體積也從 1.6M 減少到 980K 。此外像上述的 <a href="https://github.com/phosphor-icons/phosphor-react" target="_blank" rel="noopener noreferrer">phosphor-react</a> 也能在 IDE 正常取得 type 同時能有更短的 startup time 。</p><p>以下是 <code>unplugin-transform-imports</code> 的連結：</p><ul><li>NPM: <a href="https://www.npmjs.com/package/unplugin-transform-imports" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/unplugin-transform-imports</a></li><li>GitHub: <a href="https://github.com/VdustR/unplugin-transform-imports" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/unplugin-transform-imports</a></li></ul>]]></content:encoded>
            <category>esbuild</category>
            <category>icon</category>
            <category>import</category>
            <category>lodash</category>
            <category>rollup</category>
            <category>transform</category>
            <category>tree-shaking</category>
            <category>unplugin</category>
            <category>vite</category>
            <category>webpack</category>
        </item>
        <item>
            <title><![CDATA[g2d]]></title>
            <link>https://vdustr.dev/blog/2022/03/22/gitignore-to-dockerignore</link>
            <guid>/2022/03/22/gitignore-to-dockerignore</guid>
            <pubDate>Tue, 22 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Transform .gitignore to .dockerignore.]]></description>
            <content:encoded><![CDATA[<p>Transform .gitignore to .dockerignore.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-22-gitignore-to-dockerignore/og.png" alt="g2d banner" class="img_qxSE"></p><p><code>.gitignore</code> 和 <code>.dockerignore</code> 在路徑上其實是有一些差異的，如下列表：</p><table><thead><tr><th><code>.gitignore</code></th><th><code>.dockerignore</code></th></tr></thead><tbody><tr><td><code>!/foo</code></td><td><code>!foo</code></td></tr><tr><td><code>!foo</code></td><td><code>!**/foo</code></td></tr><tr><td><code>/foo</code></td><td><code>foo</code></td></tr><tr><td><code>foo</code></td><td><code>**/foo</code></td></tr></tbody></table><p>因此我基本上不會直接把 <code>.gitignore</code> 當作 <code>.dockerignore</code> 來使用，雖然好像還有 <a href="https://zzz.buzz/2018/05/23/differences-of-rules-between-gitignore-and-dockerignore/" target="_blank" rel="noopener noreferrer">其他差異</a> ，但至少路徑是相對容易解決而且明顯的。在這之前其實就有人寫了一個 <a href="https://www.npmjs.com/package/gitignore-to-dockerignore" target="_blank" rel="noopener noreferrer"><code>gitignore-to-dockerignore</code></a>，但由於判斷換行的方式導致它無法保留 <code>CR</code> (Carriage Return aka <code>\r</code>)，這在 <a href="https://github.com/github/gitignore/blob/2bb963b/Global/macOS.gitignore#L7" target="_blank" rel="noopener noreferrer"><code>macOS.gitignore</code></a> 裡有使用到：</p><div class="language-bash codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_wyb3">.gitignore</div><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-bash codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Icon must end with two \r</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Icon^M</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這會導致一般的 <code>Icon</code> 路徑也被 ignored，因此無論是 <code>.gitignore</code> 或 <code>.dockerignore</code> 都應將其保留。</p><p>大概在 2021 年 9 月的時候寫了一個 <a href="https://github.com/VdustR/g2d" target="_blank" rel="noopener noreferrer">deno 版本的 g2d</a> 並提供 binaries 和 container image ，現在則將它移植到 node 並額外提供 <a href="https://vdustr.dev/g2d.js/online/" target="_blank" rel="noopener noreferrer">online 版</a>，可以直接透過線上編輯或上傳 <code>.gitignore</code> 並預覽、複製、下載 <code>.dockerignore</code>。</p><ul><li>👉 <a href="https://vdustr.dev/g2d.js/" target="_blank" rel="noopener noreferrer">g2d Official Site</a></li><li>🚀 <a href="https://vdustr.dev/g2d.js/online/" target="_blank" rel="noopener noreferrer">g2d Online</a></li><li>🦕 <a href="https://vdustr.dev/g2d.js/deno/" target="_blank" rel="noopener noreferrer">deno g2d</a></li></ul>]]></content:encoded>
            <category>git</category>
            <category>gitignore</category>
            <category>docker</category>
            <category>dockerignore</category>
            <category>container</category>
        </item>
        <item>
            <title><![CDATA[Responsive Honeycomb Grid 🍯]]></title>
            <link>https://vdustr.dev/blog/2022/03/19/responseive-honeycomb-grid</link>
            <guid>/2022/03/19/responseive-honeycomb-grid</guid>
            <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Pure CSS responsive circle grid layout.]]></description>
            <content:encoded><![CDATA[<p>Pure CSS responsive honeycomb grid layout.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-19-responseive-honeycomb-grid/og.png" alt="Responsive Circle 🍯" class="img_qxSE"></p><iframe src="https://codesandbox.io/embed/responsive-honeycomb-grid-1dg35m?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Honeycomb Grid 🍯" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>同樣使用 <a href="/blog/2022/03/15/responsive-diamond-grid/">Responsive Diamond Grid</a> fork 出來調整。圖片的部分可以移除，也可以自訂背景或不使用背景。</p><p>六角形的定位其實反而比較好算，然後圖片其實是錯的只需要使用 4 個一組。</p>]]></content:encoded>
            <category>css</category>
            <category>rwd</category>
            <category>grid</category>
            <category>layout</category>
        </item>
        <item>
            <title><![CDATA[Responsive Circle Grid 🔵]]></title>
            <link>https://vdustr.dev/blog/2022/03/16/responseive-circle-grid</link>
            <guid>/2022/03/16/responseive-circle-grid</guid>
            <pubDate>Wed, 16 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Pure CSS responsive circle grid layout.]]></description>
            <content:encoded><![CDATA[<p>Pure CSS responsive circle grid layout.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-16-responsive-circle-grid/og.png" alt="Responsive Circle 🔵" class="img_qxSE"></p><iframe src="https://codesandbox.io/embed/responsive-circle-grid-jsner3?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Circle Grid 🔵" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>直接拿 <a href="/blog/2022/03/15/responsive-diamond-grid/">Responsive Diamond Grid</a> 稍微調整一下即完成。</p>]]></content:encoded>
            <category>css</category>
            <category>rwd</category>
            <category>grid</category>
            <category>layout</category>
        </item>
        <item>
            <title><![CDATA[Responsive Diamond Grid 💎]]></title>
            <link>https://vdustr.dev/blog/2022/03/15/responsive-diamond-grid</link>
            <guid>/2022/03/15/responsive-diamond-grid</guid>
            <pubDate>Tue, 15 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Pure CSS responsive diamond grid layout.]]></description>
            <content:encoded><![CDATA[<p>Pure CSS responsive diamond grid layout.</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-15-responsive-diamond-grid/og.png" alt="Responsive Diamond Grid 💎" class="img_qxSE"></p><iframe src="https://codesandbox.io/embed/responsive-diamond-grid-q72d4u?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="Responsive Diamond Grid 💎" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>一堆數學。</p><p>原本用 2 個 item 1 組，發現如果最後一行為奇數個時排版就會有問題，所以改成 4 個 1 組，用 2:1 的矩形佔位，這樣最後 1 組就能夠正常排列。</p><p>💡 Issues:</p><ul><li><del>container 窄於 1 組的寬度時 n + 2, n + 3, n 會溢位跑版。</del> 睡一覺就用 <code>min-width: var(--placeholderX);</code> 修好了。</li></ul>]]></content:encoded>
            <category>css</category>
            <category>rwd</category>
            <category>grid</category>
            <category>layout</category>
        </item>
        <item>
            <title><![CDATA[addEventListener() useCapture]]></title>
            <link>https://vdustr.dev/blog/2022/03/14/add-event-listener-use-capture</link>
            <guid>/2022/03/14/add-event-listener-use-capture</guid>
            <pubDate>Mon, 14 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[稍微記錄一下 addEventListener useCapture 的效果。]]></description>
            <content:encoded><![CDATA[<p>稍微記錄一下 <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture" target="_blank" rel="noopener noreferrer"><code>addEventListener()</code> <code>useCapture</code></a> 的效果。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-14-add-event-listener-use-capture/og.png" alt="addEventListener() useCapture" class="img_qxSE"></p><iframe src="https://codesandbox.io/embed/usecapture-8tdyr9?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="useCapture" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p><code>useCapture</code> 為 <code>true</code> 的事件會先觸發，父層的 listener 較子層先觸發；結束了之後才會開始觸發 <code>useCapture</code> 為 <code>false</code> 的事件，子層的 listener 較父層先觸發。以上整串事件冒泡都可以透過 <code>event.stopPropagation()</code> 停止。</p><p>Reference: <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture</a></p>]]></content:encoded>
            <category>event</category>
            <category>addEventListener</category>
            <category>useCapture</category>
            <category>propagation</category>
        </item>
        <item>
            <title><![CDATA[EOLs in Textarea]]></title>
            <link>https://vdustr.dev/blog/2022/03/13/eols-in-textarea</link>
            <guid>/2022/03/13/eols-in-textarea</guid>
            <pubDate>Sun, 13 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[EOL (end of line) 在 textarea 中會被修改。]]></description>
            <content:encoded><![CDATA[<p>EOL (end of line) 在 textarea 中會被修改。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/03-13-eols-in-textarea/og.png" alt="EOLs in Textarea" class="img_qxSE"></p><p>在 Textarea 中的 EOLs 都會被 format 為 <code>\n</code> (LF) ，而在 submit 後的 request 中為 <code>\r\n</code> (CRLF) 。</p><p>Demo:</p><iframe src="https://codesandbox.io/embed/eols-in-textarea-lzq9yo?fontsize=14&amp;hidenavigation=1&amp;theme=dark" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden" title="EOLs in Textarea" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><p>此外 <code>\t</code> 及 <code>\u00A0</code>(nbsp) 並不會受到影響。</p><p>textarea 總是將 eol 換為 <code>\n</code> (LF) ：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> textarea </span><span class="token operator">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">createElement</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  textarea</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">value </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">textarea</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">value </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\n\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>FormData 本身不會改變值：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> formData </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">FormData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>但使用 ajax 請求後還是會被 format 成 <code>\r\n</code> (CRLF) ：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> xhttp </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">XMLHttpRequest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function-variable function" style="color:rgb(80, 250, 123)">onreadystatechange</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token builtin" style="color:rgb(189, 147, 249)">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// "textarea": "\r\n\r\n\r\n"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">open</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"POST"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"https://httpbin.org/post"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> formData </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token plain"> </span><span class="token class-name">FormData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"textarea"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"\n\r\r\n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  xhttp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">send</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">formData</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Reference: <a href="https://html.spec.whatwg.org/multipage/form-elements.html#the-textarea-element" target="_blank" rel="noopener noreferrer">https://html.spec.whatwg.org/multipage/form-elements.html#the-textarea-element</a></p>]]></content:encoded>
            <category>eol</category>
            <category>textarea</category>
            <category>form</category>
            <category>formdata</category>
            <category>ajax</category>
            <category>request</category>
            <category>get</category>
            <category>post</category>
        </item>
        <item>
            <title><![CDATA[Svelte 3 個人初體驗心得]]></title>
            <link>https://vdustr.dev/blog/2022/02/25/svelte-first-impression</link>
            <guid>/2022/02/25/svelte-first-impression</guid>
            <pubDate>Fri, 25 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[雖然有點晚了，但最近才比較有空稍微試玩了一下，寫了兩個小 repo ，有些小小心得在這裡紀錄一下。]]></description>
            <content:encoded><![CDATA[<p>雖然有點晚了，但最近才比較有空稍微試玩了一下，寫了兩個小 repo ，有些小小心得紀錄在這裡。</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/02-25-svelte-first-impression/og.png" alt="Svelte First Impression" class="img_qxSE"></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="優點">優點<a class="hash-link" href="#優點" title="標題的直接連結">​</a></h2><p>為什麼會想嘗試 Svelte 3?</p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="好懂好上手">好懂好上手<a class="hash-link" href="#好懂好上手" title="標題的直接連結">​</a></h3><p>基本上 <a href="https://svelte.dev/tutorial" target="_blank" rel="noopener noreferrer">官方教學</a> 跑過一次就差不多了，互動式寫得令人非常容易理解運作方式。</p><p>另外作者 <a href="https://twitter.com/Rich_Harris" target="_blank" rel="noopener noreferrer">Rich Harris</a> 的 <a href="https://youtu.be/AdNJ3fydeao" target="_blank" rel="noopener noreferrer">Rethinking reactivity</a> 分享設計理念的影片也非常值得一看。當中我很喜歡這句話：</p><p><img loading="lazy" src="https://vdustr.dev/asset-2022/02-25-svelte-first-impression/framework.png" alt="Frameworks are not tools for organising your code, They are tools for organising your mind." class="img_qxSE"></p><p>我個人認為 React hooks, Vue composition API, Svelte 3 在寫法上有一定的相似之處，我不清楚這種開發方式是否有什麼具體的專有名詞。</p><p>我自己在寫 React 的時候有一些特別在意的事:</p><ul><li>Render 的時候會一直重複做多餘的事情，這點在 <a href="https://twitter.com/Rich_Harris" target="_blank" rel="noopener noreferrer">Rich Harris</a> 的 <a href="https://youtu.be/AdNJ3fydeao" target="_blank" rel="noopener noreferrer">Rethinking reactivity</a> 裡也有提到。這個問題 React 未來有機會透過 transformer 被解決 (<a href="https://youtu.be/lGEMwh32soc" target="_blank" rel="noopener noreferrer">黃玄 - React without memo</a>) 。</li><li>依賴 <a href="https://github.com/facebook/react/tree/0dedfcc/packages/eslint-plugin-react-hooks" target="_blank" rel="noopener noreferrer">eslint-plugin-react-hooks</a> ，寫起來相對囉嗦。像是 <code>useEffect</code> 如果是要監聽特定幾個值是否改變，使用 usePrevious compare 效能就差，寫起來也醜；使用 <code>eslint-disable-next-line</code> 維護上就會比較麻煩，可能需求上有調整就會漏東漏西而產生 side effect ，而我也很討厭 disable eslint rules。</li></ul><p>如果要我推坑的話我會如何簡介 Svelte 3?</p><ul><li><p>直接改值就是改 state，使用起來非常直覺，本身像是在寫 js 但也完全不是在寫 js 。可以說 svelte 本身就是一種獨樹一格卻又像 js 的語言，透過 Svelte 這個 compiler 編譯成真正的 js 給瀏覽器執行。<a href="https://svelte.dev/blog/virtual-dom-is-pure-overhead#where-does-the-overhead-come-from" target="_blank" rel="noopener noreferrer">官方自已也是說 svelte 是 compiler</a>：</p><blockquote><p>This is almost exactly the update code that Svelte generates. Unlike traditional UI frameworks, Svelte is a compiler that knows at build time how things could change in your app, rather than waiting to do the work at run time.</p></blockquote></li><li><p><code>$:</code> 大概就像無腦版的 useMemo / computed + useEffect / watch</p></li><li><p>寫起來很爽</p></li><li><p>寫起來很爽</p></li><li><p>寫起來很爽</p></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="內建-store">內建 store<a class="hash-link" href="#內建-store" title="標題的直接連結">​</a></h3><ul><li><a href="https://svelte.dev/docs#run-time-svelte-store" target="_blank" rel="noopener noreferrer"><code>svelte/store</code></a> 簡單好用。在 <code>.svelte</code> 裡也可以直接透過 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$</code> prefix</a> 的方式取值，非常直覺。</li><li><code>derived()</code> 其實就像 <code>$:</code>。</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="內建-spring-animate--transition">內建 Spring Animate / Transition<a class="hash-link" href="#內建-spring-animate--transition" title="標題的直接連結">​</a></h3><p>內建 <a href="https://aerotwist.com/blog/flip-your-animations/" target="_blank" rel="noopener noreferrer">FLIP</a> move <a href="https://svelte.dev/docs#run-time-svelte-animate" target="_blank" rel="noopener noreferrer">animate</a> 和 <a href="https://svelte.dev/docs#run-time-svelte-transition" target="_blank" rel="noopener noreferrer">transition</a>。</p><p>使用的時候要注意目前 list item 有些小問題，詳細情況和 demo 可以參考我寫的 <a href="/blog/2022/02/22/likftc/">likftc</a> ，不確定官方未來會不會做其他修正。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="start-kit">Start kit<a class="hash-link" href="#start-kit" title="標題的直接連結">​</a></h2><ul><li>SPA: <a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">Vite</a></li><li>SSR / SSG: <a href="https://github.com/sveltejs/kit" target="_blank" rel="noopener noreferrer">SvelteKit</a></li><li>Markdown: <a href="https://github.com/pngwn/MDsveX" target="_blank" rel="noopener noreferrer">MDsveX</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="issues">Issues<a class="hash-link" href="#issues" title="標題的直接連結">​</a></h2><p>說了這麼多優點，其實也是有遇到一些問題的。期待未來都可以解決，畢竟 Svelte 開發體驗非常優越！</p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="svelte-kit-未內建-sitemap">Svelte Kit 未內建 sitemap<a class="hash-link" href="#svelte-kit-未內建-sitemap" title="標題的直接連結">​</a></h3><p>可以用: <a href="https://github.com/bartholomej/svelte-sitemap" target="_blank" rel="noopener noreferrer">bartholomej/svelte-sitemap</a></p><p>使用方式很簡單在使用 Svelte Kit 的 repository 的跟目錄下直接下指令就可以了:</p><div class="language-bash codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-bash codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx svelte-sitemap --domain https://example.com</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="generating-dts">Generating <code>.d.ts</code><a class="hash-link" href="#generating-dts" title="標題的直接連結">​</a></h3><p>要包 library 時會用到。 Svelte compiler 本身無法 generate <code>.d.ts</code> 。</p><p>官方的 language-tools 其實有內建 <a href="https://github.com/sveltejs/language-tools/blob/6ef2442/packages/svelte2tsx/src/emitDts.ts" target="_blank" rel="noopener noreferrer">emitDts</a> 但還沒有寫成文件。使用方式也很簡單：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> emitDts </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"svelte2tsx"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">require</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">createRequire</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">meta</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">emitDts</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  declarationDir</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/your/dist"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  svelteShimsPath</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">require</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">resolve</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"svelte2tsx/svelte-shims.d.ts"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  libRoot</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/your/src"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>目前無法直接整合 rollup，必須另外寫個 node script 執行。</p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="尚不支援-generic-parameter-defaults">尚不支援 Generic Parameter Defaults<a class="hash-link" href="#尚不支援-generic-parameter-defaults" title="標題的直接連結">​</a></h3><p>目前 <a href="https://github.com/sveltejs/rfcs/pull/38" target="_blank" rel="noopener noreferrer">Generics 仍在 RFC</a> 。</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> $$Generic</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// extends boolean</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>效果類似:</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:rgb(80, 250, 123)">MyFunctionComponent</span><span class="token generic-function generic class-name operator">&lt;</span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token generic-function generic class-name operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">MyClassComponent</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>尚不支援 <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-3.html#generic-parameter-defaults" target="_blank" rel="noopener noreferrer">generic parameter defaults</a> , 我也把這個問題反應給該 PR 的作者了(<a href="https://github.com/sveltejs/rfcs/pull/38#issuecomment-1039834806" target="_blank" rel="noopener noreferrer">TypeScript: Explicitly Typing Props/Slots/Events + Generics #38</a>)。</p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="component-可能不容易包得很彈性">Component 可能不容易包得很彈性<a class="hash-link" href="#component-可能不容易包得很彈性" title="標題的直接連結">​</a></h3><p>Element Directives 無法輕易直接轉移到 Component (會直接被 svelte 擋下來)。如果要讓 component 彈性很大的話不能像 react 那麼好處理。</p><p><code>$$restProps</code> / <code>$$props</code> 也不能像 react 可以那麼容易透過取得 <code>ComponentProps&lt;&gt;</code> 來繼承 children 的 prop types 。</p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="custom-hooks">Custom hooks<a class="hash-link" href="#custom-hooks" title="標題的直接連結">​</a></h3><p>因為 Svelte compiler 並不支援 <code>.js</code> / <code>.ts</code>，所以 Svelte 的功能 (主要是 <a href="https://svelte.dev/docs#component-format-script-3-$-marks-a-statement-as-reactive" target="_blank" rel="noopener noreferrer"><code>$:</code></a> 和 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$ prefix</code></a>) 並無法像 react 或 vue 那樣輕易無痛地將部分功能區塊輕易地抽出做成 custom hooks 。目前看到比較建議的做法 (<a href="https://gradientdescent.de/custom-hooks/#Mypreferredsolution" target="_blank" rel="noopener noreferrer">How to Implement Custom React Hooks in Svelte</a>) 而我也認同的是使用 <code>let:</code> directive，如此一來就可以避免 <code>.js</code> 或 <code>.ts</code> 無法使用 Svelte 特殊語法的問題，但結構上其實還是不像 react / vue custom hooks 那麼漂亮，太複雜的情境可能會出現包很多層的狀況。</p><p>另一個選擇就是改用 store，但因為也不能使用 <a href="https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values" target="_blank" rel="noopener noreferrer"><code>$ prefix</code></a> ，寫起來相對費工。</p><p>Vue 的 <a href="https://vuejs.org/guide/extras/reactivity-transform.html" target="_blank" rel="noopener noreferrer">Reactivity Transform</a> 因為有 compile <code>.js</code> / <code>.ts</code> 而且寫法就是原生的 js 所以就不用擔心這個問題，但個人認為 <a href="https://vuejs.org/guide/extras/reactivity-transform.html#retaining-reactivity-across-function-boundaries" target="_blank" rel="noopener noreferrer">Retaining Reactivity Across Function Boundaries</a> 其實更難維護，所以 Vue 的話我可能會使用一般的 <code>ref()</code>， <a href="https://vuejs.org/guide/extras/reactivity-transform.html" target="_blank" rel="noopener noreferrer">Reactivity Transform</a> 還是需要觀望一下。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="個人結論">個人結論<a class="hash-link" href="#個人結論" title="標題的直接連結">​</a></h2><p>綜合以上，我自己可能會在小巧、不需要包太多 component 、大多使用 vanilla elements 就能解決的靜態網站可以考慮使用 SvelteKit ；需要複雜功能的 app 應該還是會優先選擇 React 或 Vue ，尤其是拓展性 React 是相對簡單暴力的，但也仍然很期待 Svelte 未來的發展。</p>]]></content:encoded>
            <category>review</category>
            <category>svelte</category>
        </item>
        <item>
            <title><![CDATA[likftc]]></title>
            <link>https://vdustr.dev/blog/2022/02/22/likftc</link>
            <guid>/2022/02/22/likftc</guid>
            <pubDate>Tue, 22 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[List item keys for transition components.]]></description>
            <content:encoded><![CDATA[<p>寫了一個小 library: <a href="https://vdustr.dev/likftc/" target="_blank" rel="noopener noreferrer">likftc</a></p><p>List item keys for transition components.</p><p>支援 react, vue, svelte</p><p><a href="https://vdustr.dev/likftc/" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://vdustr.dev/asset-2022/02-22-likftc/ogimage.png" alt="likftc" class="img_qxSE"></a></p><p>在玩 Svelte 的時候發現了一個現象， Svelte 的 <a href="https://svelte.dev/docs#template-syntax-element-directives-animate-fn" target="_blank" rel="noopener noreferrer"><code>animate:flip</code></a> 會和 <a href="https://svelte.dev/docs#template-syntax-element-directives-transition-fn" target="_blank" rel="noopener noreferrer"><code>transition:fn</code></a> 在 list item 快速變動時會發生衝突，造成某些 item 卡在不正確的地方。原因是在 component 的控制下， list item 是使用 key 來判斷是否使用同一個 DOM，無論是 framework 或 compiler 本身沒有將這件事情處理好，就有可能在 leaving (svelte 叫 outro) 時馬上又 render 相同 key 的 list item 時， component 又馬上拿同一個 dom 開始執行 entering (svelte 叫 intro) 的動畫，當這個動畫是使用 js 處理時就會打架。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/svelte" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/svelte</a></p><p>這個衝突只有在使用 js spring function 的時候發生，所以像 <a href="https://vdustr.dev/likftc/vue" target="_blank" rel="noopener noreferrer">Vue demo</a> 中使用 css 動畫頂多也是直接瞬移而已，並不會出現特別奇怪的畫面，使用 <a href="https://github.com/VdustR/likftc" target="_blank" rel="noopener noreferrer"><code>likftc</code></a> 的話也只是已經進入 leaving 的 component 直接 fade out 而新的就直接 render 新的 list item ，我認為沒有像 <a href="https://vdustr.dev/likftc/svelte" target="_blank" rel="noopener noreferrer">Svelte</a> 那麼必要。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/vue" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/vue</a></p><p>React 的部分我使用 <a href="https://github.com/aholachek/react-flip-toolkit" target="_blank" rel="noopener noreferrer">React FLIP Toolkit</a> 。情況比較特殊，他本身其實只有處理 FLIP 的部分，並沒有處理 entering 和 leaving，但他有提供 <code>onAppear</code> 和 <code>onExit</code> 等 event props 可以讓你在相對應的時間點對 element 執行其他行為。若使用 js 控制就會遇到和 svelte 類似的問題，這個問題甚至在 <a href="https://codesandbox.io/s/4q7qpkn8q0" target="_blank" rel="noopener noreferrer">官方範例</a> 都可以快速切換重現 (先按 exitAndFlipThenEnter 然後在動畫結束之前馬上按 exitThenFlipThenEnter) 。 但如果只是像 <a href="https://vdustr.dev/likftc/react/" target="_blank" rel="noopener noreferrer">React demo</a> 在 onAppear 和 onExit 直接使用 css (這裡使用 <a href="https://animate.style/" target="_blank" rel="noopener noreferrer">Animate.css</a>) 而不使用 js 來控制的話感覺就比較沒差。</p><p>範例看這裡: <a href="https://vdustr.dev/likftc/react" target="_blank" rel="noopener noreferrer">https://vdustr.dev/likftc/react</a></p><p>如果還是想使用 React FLIP Toolkit spring function 的 entering 和 leaving 可以參考 <a href="https://github.com/VdustR/likftc/blob/dd396932913177e64a7914a18bb159ee44885d14/packages/doc/src/lib/demo/react-flip-toolkit/With.tsx" target="_blank" rel="noopener noreferrer">這裡</a>。</p>]]></content:encoded>
            <category>animate</category>
            <category>css</category>
            <category>flip</category>
            <category>javascript</category>
            <category>likftc</category>
            <category>move</category>
            <category>spring</category>
            <category>transition</category>
            <category>typescript</category>
            <category>vue</category>
            <category>svelte</category>
            <category>react</category>
        </item>
        <item>
            <title><![CDATA[Forked rollup-plugin-rename-extensions]]></title>
            <link>https://vdustr.dev/blog/2022/02/08/forked-rollup-plugin-rename-extensions</link>
            <guid>/2022/02/08/forked-rollup-plugin-rename-extensions</guid>
            <pubDate>Tue, 08 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[臨時 fork 了 一個 repo 解決 rollup-plugin-typescript2 + @betit/rollup-plugin-rename-extensions 無法並存 tslib.js 和 tslib.cjs 的問題。]]></description>
            <content:encoded><![CDATA[<p>臨時 fork 了 一個 repo 解決 rollup-plugin-typescript2 + @betit/rollup-plugin-rename-extensions 無法並存 tslib.js 和 tslib.cjs 的問題。</p><p><a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://vdustr.dev/asset-2022/02-08-forked-rollup-plugin-rename-extensions/ogimage.png" alt="Forked rollup-plugin-rename-extensions" class="img_qxSE"></a></p><p><a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">Repo 點這裡</a></p><p>在打包 library 時我並不喜歡使用像 <a href="https://github.com/jaredpalmer/tsdx" target="_blank" rel="noopener noreferrer">tsdx</a> 等 bundle 的方式，而是比較喜歡 <a href="https://rollupjs.org/guide/en/#outputpreservemodules" target="_blank" rel="noopener noreferrer">preserveModules</a> 保留原始結構，使用上能有更大的彈性。</p><p>目前為止 <a href="https://github.com/ezolenko/rollup-plugin-typescript2" target="_blank" rel="noopener noreferrer"><code>rollup-plugin-typescript2</code></a> 是我認為打包效果較好的工具，可以保留原始結構，也能生成結構一致的 <code>.d.ts</code>，並且對 <a href="https://github.com/Microsoft/tslib" target="_blank" rel="noopener noreferrer">tslib</a> 進行 tree shaking 並放到 <code>_virtual/_tslib.js</code>。</p><p>基於某些工具對 esm 支援仍不是很完美，我想同時打包 .js (esm) 和 .cjs 時，找到了個不錯的 <a href="https://github.com/GiG/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">@betit/rollup-plugin-rename-extensions</a> 可以在 rollup build 時同時對副檔名進行調整，遺憾的是其依賴的 <a href="https://github.com/rollup/plugins/blob/6cd15b9/packages/pluginutils/src/createFilter.ts#L48" target="_blank" rel="noopener noreferrer">@rollup/pluginutils createFilter</a> 並不支援 <code>\0tslib.js</code> 這種 <code>facadeModuleId</code> ，或是說根本是直接將之排除在外了，因此我 fork 了 <a href="https://github.com/vdustr/rollup-plugin-rename-extensions" target="_blank" rel="noopener noreferrer">@vdustr/rollup-plugin-rename-extensions</a> 並加了一個 match option 來直接比對原始的 <code>facadeModuleId</code> 。</p><p>實際使用狀況的話可以參考<a href="https://github.com/VdustR/likftc/blob/59b66c2/script/rollup.config.js#L43" target="_blank" rel="noopener noreferrer">這裡</a>。</p><p>最後，我認為這只是暫時性的解法，目前只是先讓他能達到預期的效果而已，應該有更好更簡單的做法，歡迎大家來 <a href="http://ganhuaking.tw/" target="_blank" rel="noopener noreferrer">Discord 群</a> 一起交流。</p>]]></content:encoded>
            <category>rollup</category>
            <category>npm</category>
            <category>library</category>
            <category>typescript</category>
            <category>esm</category>
            <category>cjs</category>
        </item>
        <item>
            <title><![CDATA[HTML To Svelte]]></title>
            <link>https://vdustr.dev/blog/2022/01/27/html-to-svelte</link>
            <guid>/2022/01/27/html-to-svelte</guid>
            <pubDate>Thu, 27 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[在先前寫的 Example for Svelte + TS + Vite + MDsveX 時，存在使用 shiki 將 code 轉為 html ，再將 html 作為 svelte component 使用的需求……]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" src="https://vdustr.dev/asset-2022/01-27-html-to-svelte/og.png" alt="HTML To Svelte" class="img_qxSE"></p><p>在先前寫的 <a href="/blog/2021/12/25/example-vite-svelte-markdown/">Example for Svelte + TS + Vite + MDsveX</a> 時，存在使用 <a href="https://github.com/shikijs/shiki" target="_blank" rel="noopener noreferrer">shiki</a> 將 code 轉為 html ， <a href="https://github.com/VdustR/example-vite-svelte-markdown/blob/2f218cd/vite.config.js#L14" target="_blank" rel="noopener noreferrer">再將 html 作為 svelte component 使用</a> 的需求……</p><p>由於 shiki 產出的結果就是一堆 <code>&lt;span /&gt;</code> 自然我不太需要擔心 html attributes ，當時的想法是只要將 html tags 的 innerText 都強制轉成 svelte 的字串就好了，於是使用了這樣的方法，讓他使用 svelte element ：</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Prevent removing leading and tailing spaces.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Transform `&lt;div&gt; foo &lt;/div&gt;` into `&lt;div&gt;{' foo '}&lt;/div&gt;`</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * @param {string} html</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">saveSvelteHtmlText</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">replace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex">&gt;( *[^&lt;\n\r]+ *)&lt;</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-flags">g</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> text </span><span class="token operator">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">substring</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">length </span><span class="token operator">-</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * We don't need escape text here but we have to transform it into a svelte</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * string.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     * For example:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   &lt;div&gt; &amp;lt;div&amp;gt; &lt;/div&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   should be transformed to</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     *   &lt;div&gt;{" &lt;div&gt; "}&lt;/div&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> unescapeText </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">unescape</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">text</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'&gt;{"'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> unescapeText</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">replace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex">"</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-flags">g</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'\\"'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'"}&lt;'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本來還覺得因為是直接使用正規而不是使用 parser 一直感到很不安，還寫了一堆註解說明，後來想想既然都是 html 了為什麼不直接用 svelte 原生的 <a href="https://svelte.dev/docs#template-syntax-html" target="_blank" rel="noopener noreferrer"><code>{@html ...}</code></a> 就好了？</p><div class="language-ts codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-ts codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * @param {string} html</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">htmlToSvelte</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">html</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">{@html \`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">html</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token template-string interpolation function" style="color:rgb(80, 250, 123)">replace</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string interpolation regex regex-delimiter">/</span><span class="token template-string interpolation regex regex-source language-regex">([`$])</span><span class="token template-string interpolation regex regex-delimiter">/</span><span class="token template-string interpolation regex regex-flags">g</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:rgb(255, 121, 198)">"\\$1"</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string string" style="color:rgb(255, 121, 198)">\`}</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>同理 React 也可以使用 <a href="https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml" target="_blank" rel="noopener noreferrer"><code>dangerouslySetInnerHTML</code></a> ， Vue 則使用 <a href="https://vuejs.org/v2/guide/syntax.html#Raw-HTML" target="_blank" rel="noopener noreferrer"><code>v-html</code></a>。</p><p>原來的 repo 也修正了， <a href="https://github.com/VdustR/example-vite-svelte-markdown/commit/c790109" target="_blank" rel="noopener noreferrer">commit 請看這裡</a>。</p><p>真的是有夠 87 🤪</p>]]></content:encoded>
            <category>svelte</category>
            <category>shiki</category>
            <category>html</category>
            <category>escape</category>
        </item>
        <item>
            <title><![CDATA[新 logo]]></title>
            <link>https://vdustr.dev/blog/2022/01/13/new-logo</link>
            <guid>/2022/01/13/new-logo</guid>
            <pubDate>Thu, 13 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[繼 2019/01 之後, 久違地更新了 Logo]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" src="https://vdustr.dev/brand/2022-01/round.png" alt="Round Icon" class="img_qxSE"></p><p>繼 2019/01 之後, 久違地更新了 Logo</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="tech">Tech<a class="hash-link" href="#tech" title="標題的直接連結">​</a></h2><ul><li>Editors:<ul><li><a href="https://github.com/LibreSprite/LibreSprite" target="_blank" rel="noopener noreferrer">LibreSprite</a></li><li><a href="https://designer.gravit.io" target="_blank" rel="noopener noreferrer">Gravit</a></li></ul></li><li>Palette: db32</li><li>Font: <a href="https://github.com/TakWolf/ark-pixel-font" target="_blank" rel="noopener noreferrer">ark-pixel-12px-latin</a></li><li>Converters:<ul><li><a href="https://convertico.com" target="_blank" rel="noopener noreferrer">ConvertICO.com</a></li><li><a href="https://github.com/shrhdk/text-to-svg" target="_blank" rel="noopener noreferrer">text-to-svg</a></li><li><a href="https://github.com/kagof/pixel-perfect-svg" target="_blank" rel="noopener noreferrer">pixel-perfect-svg</a></li></ul></li></ul><p>另外 Docusaurus Palette 使用 <a href="https://swatcherapp.com" target="_blank" rel="noopener noreferrer">Swatcher</a>:</p><ul><li>h dif: -7</li><li>s dif: -10</li><li>b dif: 6</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="source">Source<a class="hash-link" href="#source" title="標題的直接連結">​</a></h2><p><a href="https://github.com/VdustR/brand/tree/main/2022-01" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/brand/tree/main/2022-01</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="license">License<a class="hash-link" href="#license" title="標題的直接連結">​</a></h2><p>CC0</p>]]></content:encoded>
            <category>logo</category>
        </item>
        <item>
            <title><![CDATA[Pocket]]></title>
            <link>https://vdustr.dev/blog/2022/01/08/pocket</link>
            <guid>/2022/01/08/pocket</guid>
            <pubDate>Sat, 08 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[👀 Stay awhile and listen..]]></description>
            <content:encoded><![CDATA[<p><a href="https://vdustr.dev/pocket" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://vdustr.dev/asset-2022/01-08-pocket/og.png" alt="pocket" class="img_qxSE"></a></p><p>最近開始嘗試用 <a href="https://svelte.dev/" target="_blank" rel="noopener noreferrer">Svelte</a> 寫一些東西, 做了這個頁面, 主要是放一些 🔖 書籤和 <a href="https://github.com/VdustR?tab=stars" target="_blank" rel="noopener noreferrer">自己 ⭐ 的 Repositories</a> ， 方便搜尋用。</p><p>書籤的部分會陸續整理補上。</p><p>👉 <a href="https://vdustr.dev/pocket" target="_blank" rel="noopener noreferrer">https://vdustr.dev/pocket</a></p>]]></content:encoded>
            <category>pocket</category>
            <category>star</category>
            <category>repository</category>
            <category>github</category>
            <category>bookmarks</category>
            <category>svelte</category>
        </item>
        <item>
            <title><![CDATA[A TypeScript Fullstack GraphQL CodeGen Example]]></title>
            <link>https://vdustr.dev/blog/2022/01/04/example-graphql-fullstack-codegen</link>
            <guid>/2022/01/04/example-graphql-fullstack-codegen</guid>
            <pubDate>Tue, 04 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[This example will show you how to dev with typescript fullstack with GraphQL Code Generator.]]></description>
            <content:encoded><![CDATA[<p>最近試了一下 GraphQL CodeGen 產生 react-query 和 resolver type, node server 可以保證回應的型態正確, react-query functions 更可以直接使用, 真ㄉ 4 超方便的 R~</p><p>可以參考這個簡單的範例: <a href="https://github.com/VdustR/example-graphql-fullstack-codegen" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/example-graphql-fullstack-codegen</a></p>]]></content:encoded>
            <category>react</category>
            <category>graphql</category>
            <category>typescript</category>
            <category>apollo</category>
            <category>vscode</category>
            <category>visual-studio-code</category>
            <category>workspace</category>
            <category>monorepo</category>
            <category>axios</category>
            <category>gql</category>
            <category>fullstack</category>
            <category>codegen</category>
            <category>pnpm</category>
            <category>apollo-server</category>
            <category>fastify</category>
            <category>ts-node</category>
            <category>graphql-code-generator</category>
            <category>ts-node-dev</category>
            <category>react-query</category>
        </item>
        <item>
            <title><![CDATA[Example for Svelte + TS + Vite + MDsveX]]></title>
            <link>https://vdustr.dev/blog/2021/12/25/example-vite-svelte-markdown</link>
            <guid>/2021/12/25/example-vite-svelte-markdown</guid>
            <pubDate>Sat, 25 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This is an example for importing Markdown files as Svelte components.]]></description>
            <content:encoded><![CDATA[<p>想在 svelte 使用 markdown, 看到已經有大大開發了個套件叫 <a href="https://github.com/pngwn/mdsvex" target="_blank" rel="noopener noreferrer">MDsveX</a>, 然而在使用的時候仍然踩到了一些問題, 寫個簡單的範例紀錄一下, 大部分的問題和解決方法都在 vite.config.js 的註解裡:</p><p>👉 <a href="https://github.com/VdustR/example-vite-svelte-markdown" target="_blank" rel="noopener noreferrer">https://github.com/VdustR/example-vite-svelte-markdown</a></p>]]></content:encoded>
            <category>markdown</category>
            <category>demo</category>
            <category>example</category>
            <category>vscode</category>
            <category>svelte</category>
            <category>highlight</category>
            <category>pnpm</category>
            <category>md</category>
            <category>sveltejs</category>
            <category>vite</category>
            <category>shiki</category>
            <category>mdsvex</category>
            <category>vitejs</category>
            <category>shikijs</category>
            <category>html-escaper</category>
        </item>
        <item>
            <title><![CDATA[Better Discord]]></title>
            <link>https://vdustr.dev/blog/2021/12/21/better-discord</link>
            <guid>/2021/12/21/better-discord</guid>
            <pubDate>Tue, 21 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[讓 Discord 更美更好用的工具]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-info alert alert--info admonition_vKTS"><div class="admonitionHeading_wxvT"><span class="admonitionIcon_DmfQ"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>信息</div><div class="admonitionContent_Uh1l"><p>這篇同時發佈在 <a href="https://ganhuaking.tw/blog/2021/12/11/better-discord/" target="_blank" rel="noopener noreferrer">蔣幹話軟體</a></p></div></div><p>Better Discord 是個能讓 Discord 高度客製的好用工具， 有廣大的社群維護許多好用的 Plugins 和 Themes， 使用者可以依照自己的喜好搭配調整。</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="安裝">安裝<a class="hash-link" href="#安裝" title="標題的直接連結">​</a></h2><p>首先先到 <a href="https://betterdiscord.app/" target="_blank" rel="noopener noreferrer">Better Discord</a> 官網 下載並安裝，</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="安裝-pluginrepo">安裝 PluginRepo<a class="hash-link" href="#安裝-pluginrepo" title="標題的直接連結">​</a></h2><p>安裝完成後 Discord 不需要重啟， 點擊 <img loading="lazy" src="https://ganhuaking.tw/asset-2021/12-11-better-discord/userSettings.png" alt="User Settings" class="img_qxSE"> 後理論上會出現一個 Better Discord 的區塊：</p><p><img loading="lazy" src="https://ganhuaking.tw/asset-2021/12-11-better-discord/plugins.png" alt="Plugins" class="img_qxSE"></p><p>接著進入 Plugins 頁面並點擊 <a href="https://ganhuaking.tw/asset-2021/12-11-better-discord/openPluginsFolder.png" target="_blank" rel="noopener noreferrer">Open Plugins Folder</a> ，到 <a href="https://betterdiscord.app/plugins?filter=repo" target="_blank" rel="noopener noreferrer">這裡</a> 下載 <a href="https://betterdiscord.app/plugin/PluginRepo" target="_blank" rel="noopener noreferrer">PluginRepo</a> 的 <code>.js</code> 檔後放進剛剛的目錄 ( <a href="https://betterdiscord.app/plugin/ThemeRepo" target="_blank" rel="noopener noreferrer">ThemeRepo</a> 也可以順便 )， 然後回到 Plugins 頁面將 PluginRepo 啟用：</p><p><img loading="lazy" src="https://ganhuaking.tw/asset-2021/12-11-better-discord/enablePluginRepo.png" alt="Enable PluginRepo" class="img_qxSE"></p><p>接著會看到設定頁面左側選單多了 PluginRepo 的項目：</p><p><img loading="lazy" src="https://ganhuaking.tw/asset-2021/12-11-better-discord/pluginRepo.png" alt="PluginRepo" class="img_qxSE"></p><p>進入之後就可以選擇自己喜歡的 plugins 安裝啦～ ( Theme 同理但是是使用 ThemeRepo)。 依照 Downloads 或 Stars 排序前幾個都滿好用的， 當然也有可能也有遺珠等待大家去發掘了！</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="custom-css">Custom CSS<a class="hash-link" href="#custom-css" title="標題的直接連結">​</a></h2><p>另外除了套用 Theme 也可以在 Custom CSS 的地方調整介面， 例如可以像這樣調整字型：</p><div class="language-css codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-css codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token selector pseudo-class" style="color:rgb(255, 121, 198)">:root</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-primary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-display</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-code</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Consolas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Andale Mono WT'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Andale Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Lucida Console'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Lucida Sans Typewriter'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'DejaVu Sans Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Bitstream Vera Sans Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Liberation Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Nimbus Mono L'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Monaco</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Courier New'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Courier</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> monospace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-headline</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto Nord</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Ginto</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-korean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Apple SD Gothic Neo'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'NanumBarunGothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'맑은 고딕'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Malgun Gothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Gulim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 굴림</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Dotum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 돋움</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-japanese</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Hiragino Sans</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ヒラギノ角ゴ ProN W3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Hiragino Kaku Gothic ProN'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'メイリオ'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Meiryo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Osaka</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'MS PGothic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-chinese-simplified</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft YaHei New'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微软雅黑</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft Yahei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    宋体</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> SimSun</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-chinese-traditional</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Victor Mono'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jf-openhuninn-1.1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Whitney</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微軟正黑體</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft JhengHei UI'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft YaHei'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 微軟雅黑</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> 宋体</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> SimSun</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Helvetica Neue'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Helvetica</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Arial</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sans-serif</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>擅長前端的朋友們也可以自己在 Discord 按 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>I</kbd> ( Mac OS 則是 <kbd>Command⌘</kbd> + <kbd>Option</kbd> + <kbd>I</kbd> ) 來看 style。</p><p>最後結果就能變像這樣子啦~</p><p><img loading="lazy" src="https://ganhuaking.tw/asset-2021/12-11-better-discord/final.png" alt="final" class="img_qxSE"></p><ul><li>Theme - <a href="https://betterdiscord.app/theme/Dark%20Matter" target="_blank" rel="noopener noreferrer">DarkMatter</a></li><li>Fonts<ul><li><a href="https://rubjo.github.io/victor-mono/" target="_blank" rel="noopener noreferrer">Victor Mono</a></li><li><a href="https://justfont.com/huninn/" target="_blank" rel="noopener noreferrer">open 粉圓</a></li></ul></li></ul><p>我自己有遇到 Enable Transparency 開啟時 <a href="https://docs.microsoft.com/en-us/windows/powertoys/" target="_blank" rel="noopener noreferrer">PowerToys</a> 的 <a href="https://docs.microsoft.com/en-us/windows/powertoys/fancyzones" target="_blank" rel="noopener noreferrer">FancyZones</a> 無法正確定位的小問題， 關掉就沒事了。</p><p>另外 Better Discord 也有他們自己的 <a href="https://discord.com/invite/0Tmfo5ZbORCRqbAd" target="_blank" rel="noopener noreferrer">Discord Server</a> 。</p>]]></content:encoded>
            <category>discord</category>
            <category>plugin</category>
            <category>theme</category>
        </item>
        <item>
            <title><![CDATA[Podman in WSL2]]></title>
            <link>https://vdustr.dev/blog/2021/09/20/podman-in-wsl2</link>
            <guid>/2021/09/20/podman-in-wsl2</guid>
            <pubDate>Mon, 20 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[3 分鐘 跟 podman 當好朋友]]></description>
            <content:encoded><![CDATA[<p>3 分鐘 跟 podman 當好朋友</p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="install-wsl2">Install WSL2<a class="hash-link" href="#install-wsl2" title="標題的直接連結">​</a></h2><p>👉 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">Windows Subsystem for Linux Installation Guide for Windows 10</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="install-ubuntu-optional">Install Ubuntu (Optional)<a class="hash-link" href="#install-ubuntu-optional" title="標題的直接連結">​</a></h2><p>👉 <a href="https://www.microsoft.com/en-us/p/ubuntu/9nblggh4msv6" target="_blank" rel="noopener noreferrer">Get Ubuntu - Microsoft Store</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="install-podman">Install podman<a class="hash-link" href="#install-podman" title="標題的直接連結">​</a></h2><p>👉 <a href="https://www.redhat.com/sysadmin/podman-windows-wsl2" target="_blank" rel="noopener noreferrer">How to run Podman on Windows with WSL2</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="install-podman-compose">Install podman-compose<a class="hash-link" href="#install-podman-compose" title="標題的直接連結">​</a></h2><p>Install python3 and pip:</p><div class="language-bash codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-bash codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> -y </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> python3 python3-venv python3-pip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pip3 </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">podman-compose</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notice that you have to add <code>~/.local/bin</code> to <code>PATH</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="integrate-podman-compose-and-fish">Integrate podman-compose and fish<a class="hash-link" href="#integrate-podman-compose-and-fish" title="標題的直接連結">​</a></h3><p>Install the latest fish shell for <a href="https://fishshell.com/docs/current/cmds/fish_add_path.html" target="_blank" rel="noopener noreferrer"><code>fish_add_path</code></a> if your fish is &lt; <code>3.3.0</code>:</p><div class="language-bash codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-bash codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Check version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ fish -v</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">fish, version </span><span class="token number">3.3</span><span class="token plain">.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> apt-add-repository ppa:fish-shell/release-3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> fish</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Check the <a href="https://fishshell.com/" target="_blank" rel="noopener noreferrer">official document</a> if you use another distribution.</p><p>Add into <code>~/.config/fish/config.fish</code>:</p><div class="language-bash codeBlockContainer_Gk2y theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_aR7z"><pre tabindex="0" class="prism-code language-bash codeBlock_RsDQ thin-scrollbar"><code class="codeBlockLines_TLCI"><span class="token-line" style="color:#F8F8F2"><span class="token plain">fish_add_path ~/.local/bin</span><br></span></code></pre><div class="buttonGroup_CGtf"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_dYFS" aria-hidden="true"><svg class="copyButtonIcon_mHIY" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_wnzI" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_T_ot" id="reference">Reference<a class="hash-link" href="#reference" title="標題的直接連結">​</a></h2><ul><li><a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener noreferrer">Windows Subsystem for Linux Installation Guide for Windows 10</a></li><li><a href="https://www.redhat.com/sysadmin/podman-windows-wsl2" target="_blank" rel="noopener noreferrer">How to run Podman on Windows with WSL2</a></li></ul>]]></content:encoded>
            <category>podman</category>
            <category>podman-compose</category>
            <category>container</category>
            <category>wsl2</category>
            <category>windows</category>
            <category>fish</category>
        </item>
        <item>
            <title><![CDATA[Migrate to Docusaurus v2]]></title>
            <link>https://vdustr.dev/blog/2021/04/01/move-to-docusaurus</link>
            <guid>/2021/04/01/move-to-docusaurus</guid>
            <pubDate>Thu, 01 Apr 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This is my first post on Docusaurus 2.]]></description>
            <content:encoded><![CDATA[<p>I migrated my site to Docusaurus v2.</p><p>剛好今天愚人節。之後會開始在這邊寫開發紀錄吧！</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>